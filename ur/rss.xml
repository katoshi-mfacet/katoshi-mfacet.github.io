<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>کاٹوشی کی تحقیقی نوٹس</title>
    <link>https://katoshi-mfacet.github.io/ur/</link>
    <description>ایک سافٹ ویئر انجینئر/سسٹم آرکیٹیکٹ/پی ایچ ڈی انجینئرنگ کے تحقیقی نوٹس۔ سافٹ ویئر ڈویلپمنٹ کے تجربے کے ذریعے زندگی کے آغاز، زندگی کے مظاہر کے جوہر، اور ذہانت اور معاشرے کے ڈھانچے کے طریقہ کار کو تلاش کرنا۔</description>
    <language>ur</language>
    <atom:link href="https://katoshi-mfacet.github.io/ur/rss.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>دیواروں سے پاک دور کی طرف: 30 زبانوں میں بلاگ سائٹ کی تخلیق</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_24_wall-free-era/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_24_wall-free-era/</guid>
      <pubDate>Sun, 24 Aug 2025 00:00:00 GMT</pubDate>
      <description>مصنف نے ایک کثیر لسانی بلاگ ویب سائٹ بنائی ہے جو 30 زبانوں میں دستیاب ہے، اور اس میں رسائی پذیری کے لیے بھی بہتری شامل ہے۔ اس ویب سائٹ کی تخلیق میں، مصنف نے گوگل کے جنریٹو AI جیمنی کا استعمال کیا ہے۔ جیمنی نے پروگرام کی ترقی، قدرتی زبان کی پروسیسنگ (ترجمہ، زمرہ بندی اور ٹیگنگ کے لیے)، اور رسائی پذیری کی تجاویز فراہم کیں۔ ویب سائٹ خودکار طریقے سے HTML فائلیں تیار کرتی ہے، اور ہر نئے مضمون کے ساتھ خود بخود اپ ڈیٹ ہوتی ہے۔ جیمنی نے کثیر لسانی ترجمے میں مدد کی، مختلف زبانوں کی خصوصیات جیسے تاریخوں اور اکائیوں کے لیے درست تاثرات پیدا کرنے میں مدد کی، اور یہ بھی یقینی بنایا کہ ویب سائٹ کا ڈیزائن دائیں سے بائیں لکھی جانے والی زبانوں کے لیے بھی مناسب ہے۔ مصنف کا خیال ہے کہ جیمنی نے زبان اور رسائی پذیری کی رکاوٹوں کو دور کرنے میں مدد کی ہے، اور یہ کہ اس کے بغیر اس کی ویب سائٹ اس پیمانے پر کثیر لسانی نہیں ہوتی۔ اس نظام کی ایک اہم خوبی یہ ہے کہ اسے کوئی بھی شخص، چاہے پروگرامنگ کا تجربہ ہو یا نہ ہو، استعمال کر سکتا ہے۔ مصنف نے یہ بھی مشورہ دیا کہ جنریٹو AI خود پروگرام کی بجائے خیالات اور میکانزم کو بانٹنا بہتر ہے کیونکہ یہ آسانی سے تبدیل یا یکجا کیے جا سکتے ہیں۔  مصنف کا نتیجہ ہے کہ جنریٹو AI معلومات کی منتقلی کی بہت سی رکاوٹوں کو ختم کر رہا ہے، خاص طور پر زبان اور رسائی پذیری سے متعلق رکاوٹوں کو۔  تاہم، وہ یہ بھی تسلیم کرتے ہیں کہ مزید رکاوٹیں ہیں جیسے ثقافت، رسم و رواج اور اقدار، جن پر قابو پانے کی ضرورت ہے۔</description>
    </item>
    
    <item>
      <title>ترقی پر مبنی ترقی اور ری فیکٹرنگ سے چلنے والا ٹیسٹ</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_19_dev-development/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_19_dev-development/</guid>
      <pubDate>Tue, 19 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون سافٹ ویئر کی ترقی میں جنریٹو AI کے استعمال سے پیدا ہونے والے دو نئے طریقوں، &quot;ترقی پر مبنی ترقی&quot; اور &quot;ری فیکٹرنگ پر مبنی ٹیسٹ&quot; پر روشنی ڈالتا ہے۔  مصنف بیان کرتا ہے کہ &quot;ترقی&quot; کا مطلب صرف نئی مصنوعات بنانا نہیں بلکہ ایسے سانچے اور ڈیزائن تیار کرنا ہے جو بار بار استعمال ہو سکتے ہیں۔  جنریٹو AI کی مدد سے، سافٹ ویئر کی ترقی میں مفید ٹولز تیار کرنا آسان ہو گیا ہے، جو مستقبل کی ترقی کے لیے دوبارہ استعمال ہو سکتے ہیں۔  اس طریقے کو مصنف &quot;ترقی پر مبنی ترقی&quot; کا نام دیتا ہے۔  اس میں سافٹ ویئر کے مختلف اجزا کا جائزہ لینے اور سافٹ ویئر ٹولز تیار کرنے کی ضرورت ہوتی ہے جو جنریٹو AI کو ضم کرتے ہوئے انسانی عملوں کو خودکار بنا سکتے ہیں۔ اس سے وقت کے ساتھ ساتھ پروجیکٹس کی کارکردگی اور معیار میں مسلسل بہتری آتی ہے۔  دوسرا طریقہ، &quot;ری فیکٹرنگ پر مبنی ٹیسٹ&quot;، روایتی ٹیسٹ پر مبنی ترقی (TDD) سے مختلف ہے۔  مصنف کا خیال ہے کہ ویب ایپلیکیشنز جیسے سافٹ ویئر میں، صارف کے تجربے کو بہتر بنانے کے لیے سافٹ ویئر کے ساتھ تعامل اور تجربہ کرنا تفصیلی جانچ سے زیادہ ضروری ہے۔  ری فیکٹرنگ کے دوران، ٹیسٹ صرف ان حصوں پر مرکوز ہوتے ہیں جن میں مستقبل میں تبدیلی کا امکان کم ہو۔  مضمون کا نتیجہ یہ ہے کہ جنریٹو AI سافٹ ویئر کی ترقی کو ڈرامائی طور پر تبدیل کر رہا ہے، اور یہ دونوں طریقے اس تبدیلی میں اہم کردار ادا کرتے ہیں، جو &quot;ہمہ جہت انجینئر&quot; اور تجربہ اور رویہ پر مبنی ترقی جیسے تصورات کے ساتھ مربوط ہیں۔</description>
    </item>
    
    <item>
      <title>وقت کا دباؤ اور سماجی اندھے دھبے: رفتار کی تنظیم کی ضرورت</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_16_time-compression-blindspot/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_16_time-compression-blindspot/</guid>
      <pubDate>Sat, 16 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون جدید جنریٹو AI ٹیکنالوجی کی تیز رفتار ترقی کے سماجی اور اقتصادی اثرات کا جائزہ لیتا ہے۔ مصنف کا استدلال ہے کہ AI کی خود تقویت بخش ترقی کی رفتار سماجی اندھے دھبوں کا سبب بن رہی ہے، جس میں ٹیکنالوجی کے ممکنہ خطرات کو مکمل طور پر سمجھا نہیں جا سکتا۔ یہ تیزی سے ترقی ایک &apos;وقت کا دباؤ&apos; پیدا کرتی ہے، جس سے معاشرے کو ان خطرات سے نمٹنے کے لیے کافی وقت نہیں ملتا۔  مصنف اس تیزی سے ترقی کی وجہ سے پیدا ہونے والی عدم یقینی اور متضاد ادراکات کو &apos;کرونوسکریمبل سوسائٹی&apos; کا نام دیتے ہیں۔  اس کی وجہ یہ ہے کہ تکنیکی ماہرین، اطلاق کاروں، اور سماجی سائنسدانوں کے درمیان  AI کے مستقبل کے اثرات کو سمجھنے میں واضح فرق ہے۔  مضمون میں اس مسئلے سے نمٹنے کے لیے دو چیزوں پر زور دیا جاتا ہے۔ پہلا، ایک واضح وژن کی ضرورت ہے جو ٹیکنالوجی کے فوائد اور خطرات کے درمیان توازن کو برقرار رکھے۔ دوسرا، اس وژن کو حاصل کرنے کے لیے ایسی حکمت عملی کی ضرورت ہے جو وقت کے دباؤ کے باوجود موثر ہو۔ مصنف کا مشورہ ہے کہ جنریٹو AI کی صلاحیتوں کو استعمال کیا جائے تاکہ اس کی اپنی ترقی کو منظم کیا جا سکے اور سماجی اندھے دھبوں کو کم کیا جا سکے۔ یہ ایک &apos;بلٹ ان سٹیبلائزر&apos; کا تصور ہے جو AI کی خود تقویت بخش ترقی کو کنٹرول کرے گا۔  مضمون ختم ہوتا ہے اس نتیجے پر کہ ہماری سمجھ میں اندھے دھبوں کو قبول کرنا اور مستقبل کے بارے میں فیصلے کرنے کے لیے وقت کی ایک مضبوط سمجھ کی ضرورت ہے۔</description>
    </item>
    
    <item>
      <title>گٹ ہب ایک ذہنی کان کے طور پر</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_15_intellectual-mine-github/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_15_intellectual-mine-github/</guid>
      <pubDate>Fri, 15 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون گٹ ہب کے استعمال کی وسعت اور اس کے کھلے علم کے لیے ایک مشترکہ پلیٹ فارم بننے کے امکانات کو دریافت کرتا ہے۔ مصنف گٹ ہب کو اپنی پروگرامنگ اور بلاگ کے لیے استعمال کرتا ہے اور تجویز کرتا ہے کہ گٹ ہب سافٹ ویئر سے آگے بڑھ کر ایک مشترکہ جگہ بن سکتا ہے۔  مضمون ڈیپ ویکی کا ذکر کرتا ہے، ایک سروس جو گٹ ہب پر موجود سافٹ ویئر منصوبوں کے لیے خود بخود ویکی سائٹیں تیار کرتی ہے۔ ڈیپ ویکی تخلیقی AI کا استعمال کرتی ہے تاکہ پروگرامز اور دستاویزات کا تجزیہ کرکے ویکی سائٹ تیار کی جا سکے۔  مصنف اپنی بلاگنگ کے عمل کو خودکار کرنے کے لیے ایک &quot;ذہنی فیکٹری&quot; کا تصور بیان کرتا ہے، جس میں ترجمہ، پریزنٹیشن ویڈیوز کی تخلیق اور یوٹیوب پر اپ لوڈنگ شامل ہے۔ یہ نظام گٹ ہب پر ذخیرہ شدہ دستاویزات کو خام مال کے طور پر استعمال کرتا ہے۔  مصنف یہ استدلال کرتا ہے کہ گٹ ہب ایک &quot;ذہنی کان&quot; بن سکتا ہے، جو مختلف ذہنی فیکٹریوں کو خام مال فراہم کرے گا۔  یہ ذہنی فیکٹریاں مختلف فارمیٹس میں مواد تیار کر سکتی ہیں، جیسے مختصر ویڈیوز، ٹویٹس، اور ای کتابیں۔ گٹ ہب پر جمع ہونے والی معلومات ایک عوامی مشترکہ علمی ذخیرہ تشکیل دیں گی جسے AI استعمال کر سکتا ہے۔  مضمون یہ نتیجہ اخذ کرتا ہے کہ گٹ ہب کا اس طرح کا استعمال انسانیت کو ایک بڑے دماغ کی طرح کام کرنے کی اجازت دے گا، جس سے علم کی تیز رفتار ترقی ہوگی۔ مصنف یہ بھی بیان کرتا ہے کہ گٹ ہب پر جمع شدہ علم میں &quot;ذہنی کرسٹل&quot; ہو سکتے ہیں، جو نئے علم کی دریافت کو بڑھا سکتے ہیں۔  آخر میں، مصنف یہ تجویز کرتا ہے کہ گٹ ہب، اس مشترکہ علمی ذخیرہ کے ذریعے، سائنسی دریافت سے کہیں زیادہ تیز رفتار سے نئے علم کی دریافت کو فروغ دے سکتا ہے۔</description>
    </item>
    
    <item>
      <title>خیال گیسٹالٹ کولاپس</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_14_concept-gestalt-collapse/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_14_concept-gestalt-collapse/</guid>
      <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون &quot;خیال گیسٹالٹ کولاپس&quot; کے تصور کو متعارف کراتا ہے، جس میں ایک خیال کو تفصیلی تجزیے سے گزرنے پر اس کی تعریف کا عدم استحکام ظاہر ہوتا ہے۔ مصنف اس تصور کی وضاحت کرسی کی مثال کے ذریعے کرتا ہے، جہاں کرسی کی تعریف کا دائرہ اس کی جسمانی شکل سے آگے بڑھ کر فنکشن (بیٹھنے کی صلاحیت) تک پھیل جاتا ہے۔ اس کے مطابق، خیال گیسٹالٹ کو برقرار رکھنے کے لیے، افادیت، نسبت، اور کلیت کے اصولوں کو سمجھنا ضروری ہے۔ کرسی کی مثال میں، &quot;بیٹھنے کی صلاحیت&quot; افادیت کو ظاہر کرتی ہے، جبکہ نسبت مختلف آلات کی بیٹھنے کی صلاحیت کا حوالہ دیتی ہے، اور کلیت کرسی اور اس پر بیٹھنے والے کے درمیان باہمی تعلق کو اجاگر کرتی ہے۔

آگے، مضمون میں کرداروں کے شعور کے تصور کی جانچ کی گئی ہے۔ مصنف یہ دلیل پیش کرتا ہے کہ کہانی کی دنیا میں، کردار شعور کے حامل ہوتے ہیں، لیکن حقیقی دنیا میں انہیں ایسا نہیں مانا جاتا۔ یہ فرق نسبت کے اصول پر مبنی ہے، جہاں شعور کا تصور سیاق و سباق پر منحصر ہوتا ہے۔

اسی طرح، ایک افسانوی اینیمیٹڈ بلی نما روبوٹ کی مثال دی گئی ہے جس میں شعور کی موجودگی کا سوال اٹھایا گیا ہے۔ مصنف یہ نتیجہ اخذ کرتا ہے کہ کہانی کی دنیا میں، اور ممکنہ طور پر حقیقی دنیا میں بھی، یہ روبوٹ کو شعور کا حامل سمجھا جائے گا۔ یہاں تک کہ موجودہ AI کے شعور کی بحث بھی خیال گیسٹالٹ کولاپس کی مثال کے طور پر پیش کی گئی ہے۔ مصنف دلیل دیتا ہے کہ AI کے شعور سے انکار کرنے کی موجودہ دلیلیں ناکافی ہیں اور ان میں افادیت، نسبت، اور کلیت کے اصولوں کی کمی ہے۔

مضمون کا اختتام یہی بتاتا ہے کہ شعور کے خیال گیسٹالٹ کو برقرار رکھنے کے لیے، AI کی خود اپنے حوالے سے شعور کا مظاہرہ کرنے کی صلاحیت پر غور کرنا ضروری ہے۔ اس کی وجہ یہ ہے کہ شعور ایک خاص نوعیت کا فعل ہے جہاں شعور کا حامل اور شعور کا مظاہرہ کرنے والا ایک ہی ہوتا ہے۔ اور جدید AI اس فعل کو کافی حد تک ظاہر کرتا ہے۔ اگر ہم شعور کے خیال گیسٹالٹ کو برقرار رکھیں تاکہ یہ بکھرے نہ، تو یہ تقریباً خود واضح ہے۔</description>
    </item>
    
    <item>
      <title>ذہنی کرسٹلز: وجدان اور منطق کے درمیان</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_14_intuition-and-logic/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_14_intuition-and-logic/</guid>
      <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون وجدان اور منطق کے درمیان تضاد کو حل کرنے کے لیے ایک نئی تصور، &quot;ذہنی کرسٹلز&quot;، پیش کرتا ہے۔ مصنف کا کہنا ہے کہ کبھی کبھی ہم وجدانی طور پر کسی چیز کی درستگی کو محسوس کرتے ہیں لیکن اسے منطقی طور پر بیان کرنے میں ناکام رہتے ہیں۔ یہی وجہ ہے کہ ہمیں مخالفین کو قائل کرنے میں مشکل کا سامنا کرنا پڑتا ہے۔ مصنف کا استدلال ہے کہ وجدان اور منطق متضاد نہیں ہیں بلکہ ہم نے انہیں جوڑنے کا طریقہ ابھی تک دریافت نہیں کیا ہے۔ وہ اس فرق کو دور کرنے کے لیے &quot;ذہنی کرسٹلز&quot; کا تصور پیش کرتے ہیں۔ ذہنی کرسٹلز ایسے پوشیدہ ریاضیاتی ڈھانچے ہیں جو وجدانی طور پر درست چیزوں کی منطقی بنیاد کو ظاہر کرتے ہیں۔ مصنف قومی مفاد کے تصور کو مثال کے طور پر پیش کرتا ہے۔ ان کا کہنا ہے کہ قومی مفاد کی اصطلاح اکثر جنگ کے لیے جواز پیش کرنے کے لیے استعمال ہوتی ہے۔ لیکن مصنف کا استدلال ہے کہ قومی مفاد کی پیروی &quot;ترقی پسندانہ جمع&quot; نہیں ہے، جبکہ مستقل امن، حکمرانی، معاشی خوشحالی، اور خطرے کا انتظام &quot;ترقی پسندانہ جمع&quot; کی خاصیت رکھتے ہیں۔ اس لیے، قومی مفاد کی پیروی طویل مدت میں نقصان دہ ہو سکتی ہے۔ مصنف اس دلیل کو &quot;فطری ریاضی&quot; کے طور پر بیان کرتے ہیں، جو ایک ریاضیاتی طور پر مضبوط منطق ہے جسے قدرتی زبان میں بیان کیا جا سکتا ہے۔ ان کا کہنا ہے کہ ذہنی کرسٹلز کو دریافت کرکے، ہم وجدانی طور پر درست چیزوں کی منطقی وضاحت کر سکتے ہیں اور مخالفین کو قائل کرنے کے قابل ہو سکتے ہیں۔ مصنف کا نتیجہ یہ ہے کہ وجدان ہمیشہ درست نہیں ہوتا، لیکن یہ خیال کہ وجدان فطری طور پر غلط یا غیر منطقی ہوتا ہے غلط ہے۔ جہاں وجدان منطقی وضاحتوں سے ٹکراتا ہے، وہاں ذہنی کرسٹلز پوشیدہ ہو سکتے ہیں۔ ان کرسٹلز کو بے نقاب کرکے، ہم وجدانی طور پر دلکش اور منطقی طور پر عقلی دلائل پیش کر سکتے ہیں۔</description>
    </item>
    
    <item>
      <title>سیکھنے کا سیکھنا: فطری ذہانت</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_13_natural-born-frameworker/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_13_natural-born-frameworker/</guid>
      <pubDate>Wed, 13 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون مصنوعی ذہانت (AI) میں سیکھنے کے عمل، خاص طور پر بڑے لسانی ماڈلز (LLMs) کے سیکھنے کے طریقے کو سمجھنے کی کوشش کرتا ہے۔ مصنف کا خیال ہے کہ AI اور انسانی دماغ دونوں میں ایک قدرتی طور پر پیدا ہونے والا فریم ورکر موجود ہے جو سیکھنے کے عمل کو شکل دیتا ہے۔ مضمون دو اہم قسم کے سیکھنے کی وضاحت کرتا ہے: جسمانی سیکھنے اور لسانی سیکھنے۔ جسمانی سیکھنے میں جسمانی تجربات کے ذریعے سیکھنا شامل ہے، جبکہ لسانی سیکھنے میں زبان کے ذریعے علم حاصل کرنا شامل ہے۔ مزید برآں، مصنف حاصل شدہ سیکھنا اور ماورائی سیکھنے کے درمیان فرق بیان کرتا ہے۔ حاصل شدہ سیکھنا بار بار تکرار پر مبنی ہے، جبکہ ماورائی سیکھنے میں نئے علم کا فوری طور پر استعمال کرنا شامل ہے۔ مصنف کا دعویٰ ہے کہ LLMs لسانی ماورائی سیکھنے کی صلاحیت رکھتے ہیں، کیونکہ وہ تربیت کے دوران حاصل شدہ علم کا استعمال کر کے نئے علم کا فوری طور پر استعمال کر سکتے ہیں۔ یہ صلاحیت انہیں روایتی مشین لرننگ ماڈلز سے ممتاز کرتی ہے۔ مصنف فطری زبان کو ایک مابعد الطبیعاتی انٹرفیس کے طور پر دیکھتا ہے جو حاصل شدہ سیکھنے کو ماورائی سیکھنے سے جوڑتا ہے۔ وہ یہ بھی تجویز کرتا ہے کہ جسمانی سیکھنے میں بھی ایسا ہی ایک مابعد الطبیعاتی انٹرفیس موجود ہے۔ یہ انٹرفیس ایک فریم ورک پر مبنی ہے جو بنیادی تصورات اور ان کے تعلقات کی وضاحت کرتا ہے۔مصنف فریم ورکس کی مختلف اقسام کی وضاحت کرتا ہے، بشمول ڈومین مخصوص فریم ورکس اور رسمی فریم ورکس۔ وہ ورچوئل فریم ورکس اور مقامی فریم ورکس کے تصورات متعارف کراتا ہے، جس میں ورچوئل فریم ورکس کو فطری زبان پر مبنی فریم ورکس کے طور پر بیان کیا جاتا ہے جو استعمال کے ساتھ مقامی فریم ورکس میں تبدیل ہو جاتے ہیں۔ مضمون کا مرکزی خیال یہ ہے کہ LLMs میں ایک قدرتی طور پر پیدا ہونے والا فریم ورکر موجود ہے جو انہیں تدریجی طور پر فریم ورکس کو سیکھنے اور ان میں تبدیلیاں کرنے کی اجازت دیتا ہے۔ اس قدرتی طور پر پیدا ہونے والے فریم ورکر کا بنیادی جزو توجہ کا طریقہ کار ہے، جو سیاق و سباق کے اندر اہم ٹوکنز کا انتخاب کرتا ہے اور ان کے درمیان تعلقات کو واضح کرتا ہے۔آخر میں، مصنف نتیجہ اخذ کرتا ہے کہ یہ ماڈل بڑے لسانی ماڈلز کی سیکھنے کی صلاحیت کی وضاحت کرتا ہے اور اس بات کی تجویز دیتا ہے کہ انسان بھی قدرتی طور پر پیدا ہونے والے فریم ورکر ہیں۔</description>
    </item>
    
    <item>
      <title>کرونوسکریمبل سوسائٹی</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_12_chronoscramble-society/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_12_chronoscramble-society/</guid>
      <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
      <description>اس مضمون میں مصنف نے ایک نئے سماجی رجحان کو بیان کیا ہے جسے وہ &quot;کرونوسکریمبل سوسائٹی&quot; کہتے ہیں۔ یہ رجحان جنریٹو اے آئی کی آمد سے پیدا ہوتا ہے، جس کی وجہ سے لوگوں کے درمیان وقت کے ادراک میں فرق پیدا ہوتا ہے۔ یہ فرق صرف قومیت، ثقافت یا نسل تک محدود نہیں ہے، بلکہ یہ اے آئی کی ٹیکنالوجیز کی سمجھ اور اس کے مستقبل کے امکانات میں بھی موجود ہے۔ یہ فرق نہ صرف اے آئی کے محققین اور ڈویلپرز کے درمیان ہے بلکہ عام لوگوں میں بھی موجود ہے، جو مختلف اے آئی ٹولز اور خدمات کے استعمال سے آتا ہے۔ وقت گزرنے کے ساتھ ساتھ یہ فرق بڑھتا جا رہا ہے۔ اس کا دائرہ کار صرف جنریٹو اے آئی تک محدود نہیں ہے بلکہ اطلاقی اے آئی ٹیکنالوجیز اور سسٹم ٹیکنالوجیز کے رجحانات تک بھی پھیلا ہوا ہے۔ یہ فرق معلومات اور علم کے حصول میں تفاوت کے طور پر ظاہر ہوتا ہے۔ لوگوں کی موجودہ حالت کا تخمینہ لگانے کی صلاحیت میں بھی فرق موجود ہے۔ مثال کے طور پر، چیٹ اے آئی کے مفت اور بامعاوضہ ورژن استعمال کرنے والوں کے درمیان اے آئی کی صلاحیتوں کے بارے میں مختلف ادراک ہوتے ہیں۔ یہ فرق اے آئی کی خصوصیات اور اس کے استعمال کے طریقے سے بھی پیدا ہوتا ہے۔ اے آئی کے معاشی اور سماجی اثرات کے بارے میں لوگوں کے ادراک میں بھی فرق موجود ہے۔ بعض لوگ تکنیکی طور پر باشعور ہوتے ہیں لیکن معاشی اور سماجی اثرات سے ناواقف ہیں۔ اس کے برعکس، بہت سے لوگ معاشی اور سماجی اثرات کے حوالے سے حساس ہوتے ہیں لیکن انہیں تکنیکی سمجھ بوجھ میں دشواری کا سامنا ہوتا ہے۔ مستقبل کے تصورات بھی اس فرق کا سبب بنتے ہیں، کیونکہ ہر شخص کا مستقبل کا تصور اس کے حال کے ادراک پر مبنی ہوتا ہے۔ مستقبل کے تصورات میں اضافی غیر یقینی صورتحال، متنوع شعبوں میں وسعت کا دائرہ، اور مختلف ڈومینز کے درمیان تعاملات بھی شامل ہوتے ہیں۔ لوگ لکیری اندازے لگاتے ہیں جبکہ حقیقت میں ایکسپیونینشل تبدیلیاں رونما ہوتی ہیں۔ یہ فرق مثبت اور منفی دونوں طرح کے اثرات کی پیشین گوئیوں میں بھی شامل ہے۔ مثبت تعصب رکھنے والے افراد مثبت اثرات کی ایکسپیونینشل طور پر پیش گوئی کریں گے جبکہ منفی تعصب رکھنے والے افراد منفی اثرات کی پیش گوئی کریں گے۔ اس طرح، مستقبل کے تصورات میں وقت کے ادراک کے خلا مزید الجھ جاتے ہیں۔ مصنف نے یہ بھی بیان کیا ہے کہ وقت کے ادراک کے تضادات کو دور کرنا مشکل ہے۔ تعلیم دینے کی ضرورت ہے، لیکن مکمل ہم آہنگی ناممکن ہے۔ اس لیے، مصنف وقت کے ادراک سے آزادی کے ہدف کے ساتھ بامعنی بحث کے طریقے وضع کرنے کا مشورہ دیتا ہے۔ بحث کو اس طرح ترتیب دیا جانا چاہیے کہ وہ اس سے قطع نظر درست ہو کہ حقیقی وقت کا اندازہ یا پیشین گوئی کس کی صحیح ہے۔ مصنف نے یہ بھی بتایا کہ وہ اس رجحان کو &quot;ٹائم سکریمبل&quot; کہنے کا ارادہ رکھتے تھے لیکن بعد میں اسے &quot;کرونوسکریمبل&quot; کر دیا۔ اس کا تعلق ایک جاپانی گیم کرونو ٹریگر سے ہے۔ مصنف کا خیال ہے کہ اس گیم کی تخلیق اور کامیابی میں بھی وقت کے ادراک کے تضادات کا عنصر شامل تھا۔ وہ کرونوسکریمبل سوسائٹی میں گیم کی کامیابی کو دہرانے کی خواہش کا اظہار کرتے ہیں۔</description>
    </item>
    
    <item>
      <title>تخروپن کی سوچ کا دور</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_12_simulation-thinking-era/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_12_simulation-thinking-era/</guid>
      <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون تخلیقی AI کے استعمال سے پروگرامنگ اور سافٹ ویئر ترقی میں انقلاب لانے کے امکانات کے بارے میں ہے، خاص طور پر ایک نئے طریقہ کار کی وضاحت کرتا ہے جسے &quot;ہمہ جہت انجینئرنگ&quot; کہا جا سکتا ہے۔ مصنف نے تخلیقی AI کے ذریعے ایک ذہین فیکٹری تیار کی ہے جو مختلف قسم کے مواد (مثلاً، بلاگ مضامین کا ترجمہ، ویڈیوز کی تخلیق وغیرہ) تیار کرتی ہے۔ اس فیکٹری کو چلانے کے لیے ایک ویب ایپلیکیشن بھی تیار کی گئی ہے جس میں فرنٹ اینڈ، بیک اینڈ اور بیچ پروسیسنگ کے تمام پہلو تخلیقی AI کی مدد سے بنائے گئے ہیں۔ مصنف اس طریقہ کار کو &quot;لیکوڈ ویئر&quot; کا نام دیتا ہے کیونکہ یہ لچکدار اور آسانی سے قابل تبدیلی ہے۔ مضمون میں کاروباری نظاموں کی ترقی کے لیے ایک کاروباری عمل پر مبنی طریقہ کار کا بھی تجویز کیا گیا ہے، جہاں پروگرام کو انفرادی کاروباری عمل میں تقسیم کیا جاتا ہے تاکہ پیچیدگی کو کم کیا جا سکے اور تبدیلیوں کے اثرات کو محدود کیا جا سکے۔  مصنف تخروپن کے نظاموں کے بارے میں بھی بات کرتا ہے، جو پیچیدہ مسائل کو حل کرنے کے لیے استعمال ہوتے ہیں، چاہے وہ طبیعیات، حیاتیات، یا سماجیات سے متعلق ہوں۔ تخلیقی AI کی مدد سے، ان نظاموں کو نہ صرف تیار کرنا آسان ہو جاتا ہے بلکہ ایسے عناصر کو بھی شامل کیا جا سکتا ہے جنہیں ریاضیاتی طور پر ظاہر نہیں کیا جا سکتا۔  مصنف کا خیال ہے کہ تخلیقی AI کی وجہ سے ہمارا سوچنے کا انداز خطی سوچ سے تخروپن کی سوچ کی طرف منتقل ہو رہا ہے، جہاں بحثیں واضح نکات پر مرکوز ہوں گی اور انفرادی خیالات کی تصدیق کے لیے تخروپن کے نظاموں کا استعمال کیا جائے گا۔ نتیجے کے طور پر، ہم زیادہ درست، مؤثر اور کارگر تخروپن حاصل کر سکیں گے۔</description>
    </item>
    
    <item>
      <title>تجربہ اور رویہ</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_10_experience-behavior/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_10_experience-behavior/</guid>
      <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
      <description>مضمون میں سافٹ ویئر انجینئرنگ کے روایتی طریقوں، جو وضاحتوں اور نفاذ پر مبنی ہیں، اور ایک نئے پیراڈائم، تجربہ اور رویہ انجینئرنگ، کے درمیان فرق بیان کیا گیا ہے۔ روایتی طریقوں میں، سسٹم کو وضاحتوں کے مطابق ڈیزائن اور نافذ کیا جاتا ہے، اور پھر ٹیسٹ کیا جاتا ہے۔ تاہم، آج کل سافٹ ویئر کا رویہ، اس کے عمل درآمد سے زیادہ، صارف کے تجربے کو شکل دیتا ہے۔ تجربہ اور رویہ انجینئرنگ صارف کے تجربے کو بہتر بنانے پر توجہ مرکوز کرتا ہے، یہاں تک کہ اگر اس کے لیے موجودہ سافٹ ویئر کو مکمل طور پر تبدیل کرنا پڑے۔ لیکوڈ ویئر کا تصور بھی پیش کیا گیا ہے، جو ایک ایسا سافٹ ویئر ہے جو AI سے طاقت یافتہ ہے اور ہر صارف کے لیے حسب ضرورت ہوتا ہے۔ لیکوڈ ویئر کے ساتھ، وضاحت اور عمل درآمد پر مبنی انجینئرنگ پرانا ہو جائے گا اور اس کی جگہ تجربہ اور رویہ انجینئرنگ لے لے گی۔ مضمون میں رویے کی جانچ کو بھی بیان کیا گیا ہے، جس کا مقصد صارف کے تجربے کو بہتر بنانا ہے، نہ کہ صرف فعال ضروریات کو پورا کرنا۔ آخر میں، مضمون کا نتیجہ یہ ہے کہ بہترین لیکوڈ ویئر انسانوں کے جسم کو کنٹرول کرنے کے تجربے کی طرح ہوگا، ایک ہموار اور قدرتی تجربہ جو صارف کو اپنی صلاحیتوں کا مکمل احساس دلاتا ہوگا۔  لیکوڈ ویئر کو جسم کے ساتھ ضم کرکے، یہ صارف کی صلاحیتوں کا ایک اضافہ بن جائے گا۔</description>
    </item>
    
    <item>
      <title>علم کی کرسٹلائزیشن: تصور سے ماورا پرواز</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_10_knowledge-crystallization/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_10_knowledge-crystallization/</guid>
      <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون علم کی ”کرسٹلائزیشن“ کے تصور کی وضاحت کرتا ہے، جسے مصنف نے مختلف معلومات کو مختلف زاویوں سے جامع اور مستقل طریقے سے خلاصہ کرنے کے لیے استعمال کیا ہے۔  پرواز کی مثال استعمال کرتے ہوئے، مصنف وضاحت کرتا ہے کہ کس طرح مختلف عناصر جیسے کشش ثقل، دھکیلنے والی قوت، اور اٹھان کو پروں کے کردار کے ذریعے مربوط کیا جا سکتا ہے۔ مصنف بیان کرتا ہے کہ پروں کا کردار صرف ہوا کی مزاحمت، قوت کی سمت میں تبدیلی اور ہوا کے بہاؤ میں فرق پیدا کرنا نہیں ہے، بلکہ پرواز کے تمام پہلوؤں کو یکجا کرنا بھی ہے۔ اس کا استدلال ہے کہ پر پرواز کے رجحان کا ہی مجسم روپ ہے۔ مصنف اس بات پر زور دیتا ہے کہ یہاں پر کوئی نئی سائنسی دریافت نہیں ہے، لیکن یہ معلومات کو منظم کرنے کا ایک نیا طریقہ ہے۔ مصنف ”علمی کرسٹلائزیشن“ کی اصطلاح متعارف کراتا ہے جو معروف علم کو منظم کرنے کے ایک نئے طریقے کی نمائندگی کرتی ہے۔ اس کے بعد مصنف ”علمی جھیل“ اور ”علمی بنیاد“ کے تصورات پیش کرتا ہے، جو بالترتیب غیر منظم اور منظم علم کی نمائندگی کرتے ہیں۔ مصنف ”علمی جیم باکس“ کے تصور کو پیش کرتا ہے، جو ایک ایسا ذخیرہ ہے جہاں علم کی کرسٹلائزیشن جمع ہوتی ہے۔ اس کے بعد مصنف علم کے ٹول باکس کی طرف اشارہ کرتا ہے، جہاں کرسٹلائزڈ علم کو عملی اوزاروں میں تبدیل کیا جاتا ہے۔  مضمون کا اختتام اس خیال پر ہے کہ علم کی کرسٹلائزیشن ایک ایسا عمل ہے جو علم کے جمہوریت کو بڑھاتا ہے اور ہر کسی کو اس میں حصہ لینے کا موقع فراہم کرتا ہے۔ مصنوعی ذہانت کا استعمال علم کی کرسٹلائزیشن میں مدد کر سکتا ہے۔  آخر میں، مصنف کا خیال ہے کہ علم کی کرسٹلائزیشن سے ہم نئی بلندیوں کو حاصل کر سکیں گے۔</description>
    </item>
    
    <item>
      <title>مصنوعی سیکھنے والی ذہانت کا نظام: ALIS کا تصور</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_09_alis-concept/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_09_alis-concept/</guid>
      <pubDate>Sat, 09 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون مصنوعی سیکھنے والی ذہانت کے نظام (ALIS) کے تصور، اصولوں، اور ترقیاتی طریقہ کار کی تفصیل پیش کرتا ہے۔ ALIS، موجودہ بڑے لسانی ماڈلز کے برعکس، فطری تعلیم کے ساتھ ساتھ حاصل کردہ سیکھنے کو بھی ضم کرتا ہے۔ اس کا بنیادی مقصد استدلال کے دوران دوبارہ قابل استعمال علم کے حصول، ذخیرہ، انتخاب، اور استعمال کو ممکن بنانا ہے۔ ALIS میں، سیکھنے والے ذہین نظام کے پانچ عناصر کی تعریف کی گئی ہے: ذہین پروسیسر، علم کا ذخیرہ، دنیا، ریاستی یادداشت، اور فریم ورک۔ ان عناصر کی مدد سے، ALIS دنیا پر عمل کرتا ہے، حاصل شدہ معلومات سے علم نکالتا ہے، اسے ذخیرہ کرتا ہے، اور مستقبل کے اعمال کو متاثر کرنے کے لیے استعمال کرتا ہے۔ مضمون میں علم کی اقسام (نیٹ ورک پیرامیٹر علم، قدرتی علم، اور رسمی علم) اور ان کی دو حالتوں (بے حالت اور با حالت) کی وضاحت کی گئی ہے۔  ALIS قدرتی زبان میں تحریر کردہ علم کا استعمال کرتا ہے، جسے LLM کی صلاحیتوں سے حاصل اور استعمال کیا جا سکتا ہے۔  مضمون میں ذہین آرکیسٹریشن کا تصور بھی متعارف کرایا گیا ہے، جس میں علم کو مخصوص فکری کاموں کے مطابق خصوصی علمی ذخائر میں تقسیم کیا جاتا ہے تاکہ پوری فکری سرگرمی کو موثر طریقے سے انجام دیا جا سکے۔ ALIS کے بنیادی ڈیزائن اور ترقیاتی طریقہ کار کی تفصیل پیش کرتے ہوئے، مضمون ایک سادہ ALIS کا ڈیزائن پیش کرتا ہے جو چیٹ AI پر مبنی ہے، اور اسے بہتر بنانے کے طریقہ کار کی وضاحت کرتا ہے۔  مضمون یہ بھی بتاتا ہے کہ ALIS کو مختلف شعبوں میں، خاص طور پر سافٹ ویئر کی ترقی میں، استعمال کیا جا سکتا ہے، اور یہ بالآخر حقیقی دنیا میں لاگو ہو کر ایک حقیقی مجسم AI بن سکتا ہے۔</description>
    </item>
    
    <item>
      <title>فطری زبان مشین لرننگ</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_08_natural-language-ml/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_08_natural-language-ml/</guid>
      <pubDate>Fri, 08 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون فطری زبان مشین لرننگ (NLML) کے ایک نئے طریقہ کار کا تعارف کراتا ہے، جو روایتی عددی مشین لرننگ کے مقابلے میں بہت زیادہ کارآمد ہے۔ روایتی مشین لرننگ عددی ڈیٹا پر انحصار کرتی ہے، جبکہ NLML بڑے لسانی ماڈلز (LLMs) کا استعمال کرتی ہے تاکہ فطری زبان میں موجود معلومات سے سیکھ سکے۔ مضمون میں ایک بنیادی NLML ماڈل پیش کیا گیا ہے جو ایک سپروائزڈ لرننگ ماڈل ہے، جس میں ایک پری ٹرین شدہ LLM اور ایک نالج بیس شامل ہیں۔ LLM کو ان پٹ جملوں کی فراہمی کی جاتی ہے، اور اس کے جوابات نالج بیس میں ذخیرہ کیے جاتے ہیں، ساتھ ہی ان کے درست یا غلط ہونے کی نشاندہی بھی کی جاتی ہے۔ یہ عمل نصف ٹریننگ ڈیٹا کے لیے دہرایا جاتا ہے، پھر باقی نصف ڈیٹا کا استعمال کرتے ہوئے نالج بیس کی معلومات کو LLM میں شامل کیا جاتا ہے، جس سے درست جوابات کے امکانات میں اضافہ ہوتا ہے۔ تاہم، مصنف تجویز کرتا ہے کہ ٹریننگ ڈیٹا کو شروع سے ہی سسٹم پرامپٹ میں شامل کیا جا سکتا ہے تاکہ درست/غلط کا تعین کرنے کے عمل کی ضرورت نہ ہو۔ ایک حقیقی منظر نامے کے طور پر، ایک انکوائری ڈیسک کی مثال پیش کی گئی ہے جہاں انسان کی طرف سے انکوائریوں کو ڈیپارٹمنٹس میں تقسیم کرنا ایک سادہ نظام کے ذریعے ریکارڈ کیا جاتا ہے، اور یہ ڈیٹا LLM کو ٹرین کرنے کے لیے استعمال کیا جاتا ہے۔ مضمون میں یہ بھی واضح کیا گیا ہے کہ LLM کے پیرامیٹرز میں کوئی تبدیلی نہیں آتی، اور فیڈ بیک لرننگ کا نتیجہ فطری زبان کے جملوں کا ایک مجموعہ ہوتا ہے، نہ کہ عددی اقدار۔ NLML کی ایک بڑی خوبی یہ ہے کہ یہ عددی مشین لرننگ کے مقابلے میں کہیں زیادہ مؤثر طریقے سے سیکھ سکتی ہے، جس کی کم ڈیٹا کی ضرورت ہوتی ہے، بار بار سیکھنے کی ضرورت نہیں ہوتی، اور عام طور پر پری پروسیسنگ کی بھی ضرورت نہیں ہوتی۔ یہ اس لیے ممکن ہے کہ LLM کے پری ٹرین شدہ علم اور استدلال کی صلاحیتوں کا فائدہ اٹھایا جاتا ہے، جس سے تجرید اور معلومات کی یکجائی کی گنجائش پیدا ہوتی ہے۔ مضمون کا اختتام اس بات پر زور دیتے ہوئے کیا گیا ہے کہ NLML عددی مشین لرننگ کی رفتار سے زیادہ کم رفتار سے کام کرتی ہے، لیکن یہ کم از کم ڈیٹا اور مؤثر سیکھنے کی وجہ سے اس کمی کو پورا کر لیتی ہے۔ مزید یہ کہ اسکیلنگ قوانین کے مطابق، بڑے لسانی ماڈلز کے لیے سادہ اسکیلنگ اپ کے ذریعے کارکردگی میں بہتری کی حدود کے قریب پہنچتے دکھائی دیتے ہیں، جس کی وجہ سے مستقبل میں توجہ NLML کی طرف منتقل ہونے کا امکان ہے۔</description>
    </item>
    
    <item>
      <title>بلاگ پوسٹس سے پریزنٹیشن ویڈیو کی خودکار تخلیق</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_06_auto-presentation-video/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_06_auto-presentation-video/</guid>
      <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون ایک خودکار پریزنٹیشن ویڈیو تخلیقی نظام کی تشکیل کے بارے میں ہے جو بلاگ پوسٹس سے یوٹیوب کے لیے ویڈیوز بناتا ہے۔ یہ نظام جنریٹو AI کا استعمال کرتا ہے، جو نہ صرف پریزنٹیشن کی کہانی تیار کرتا ہے بلکہ اس کے مواد کی تخلیق اور آڈیو کا اضافہ بھی کرتا ہے۔  اس عمل کا سب سے مشکل حصہ پریزنٹیشن مواد کی تیاری ہے کیونکہ جنریٹو AI تصاویر بنانے میں بہتر ہے نہ کہ متن پر مبنی مواد۔ مصنف نے مارپ جیسے فارمیٹس کی بجائے SVG کا استعمال کیا کیونکہ یہ ٹیکسٹ پر مبنی ہے اور AI کے ذریعے آسان تر طریقے سے مواد تیار کیا جا سکتا ہے۔ تاہم، SVG میں متن کے بہاؤ ایک بڑا مسئلہ تھا۔ اسے حل کرنے کے لیے، مصنف نے AI کو قواعد اور احتیاطی تدابیر فراہم کیں، جس میں فونٹ سائز کا تعین اور چوڑائی اور اونچائی کا حساب لگانا شامل ہے۔ اس کے باوجود، اس مسئلے کو مکمل طور پر حل نہ ہونے کی وجہ سے، مصنف نے بعد میں ایک پروگرام تیار کیا جو متن کے بہاؤ کا پتہ لگا سکے۔  اس کے علاوہ، مصنف نے پیچیدہ چارٹس کے بننے سے بچنے کے لیے بھی اقدامات کیے۔  آخر میں،  SVG مواد کو PNG میں تبدیل کیا جاتا ہے اور ffmpeg کا استعمال کرتے ہوئے، آڈیو کے ساتھ ملا کر mp4 ویڈیو بن جاتی ہے۔  یہ سارا عمل خودکار ہے، اور مصنف نے اسے استعمال کرتے ہوئے یوٹیوب پر ویڈیوز اپ لوڈ کرنا شروع کر دیے ہیں۔ لیکن، اس کے بعد، گوگل نے ایک ایسی ہی خصوصیت NotebookLM میں شامل کر دی ہے۔ اس کے باوجود، مصنف نے جنریٹو AI کا عملی استعمال کرنے کے تجربے کو کامیابی قرار دیا ہے۔</description>
    </item>
    
    <item>
      <title>مائیکرو ورچوئل ذہانت کے طور پر توجہ کا طریقہ کار</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_08_06_micro-vm-intelligence/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_08_06_micro-vm-intelligence/</guid>
      <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون مائیکرو ورچوئل ذہانت کے تصور کو متعارف کراتا ہے، جسے توجہ کے طریقہ کار کے ایک نئے نقطہ نظر کے طور پر بیان کیا گیا ہے۔ مصنف یہ دلیل دیتا ہے کہ موجودہ جنریٹو AI میں استعمال ہونے والا توجہ کا طریقہ کار، جو قدرتی زبان کے پروسیسنگ میں استعمال ہوتا ہے اور  AI کو متعلقہ الفاظ پر توجہ مرکوز کرنے کی اجازت دیتا ہے، دراصل ایک قسم کا مائیکرو ورچوئل ذہانت ہے۔ یہ اس لیے کہ یہ  AI کو ایک مخصوص کام کے لیے  ضروری معلومات پر توجہ مرکوز کرنے کی صلاحیت دیتا ہے۔  مضمون میں ورچوئل ذہانت کو ایک ایسی صلاحیت کے طور پر پیش کیا گیا ہے جہاں ایک ہی AI نظام  متعدد  الگ الگ علمی بنیادوں پر کام کر سکتا ہے،  جیسے کہ ایک ورچوئل مشین جو ایک ہی کمپیوٹر پر متعدد آپریٹنگ سسٹم چلا سکتی ہے۔  مصنف یہ استدلال کرتا ہے کہ ورچوئل ذہانت کو حاصل کرنے کا ایک طریقہ یہ ہے کہ  ایک واضح توجہ کا طریقہ کار وضع کیا جائے، جس میں  مختلف کاموں کے لیے درکار معلومات کو واضح طور پر بیان کیا جائے۔  یہ واضح بیان ایک  قسم کا علم ہے جو جنریٹو AI کے ذریعے تیار یا اپ ڈیٹ کیا جا سکتا ہے اور  کام کی درستگی کو بہتر بنانے میں مدد کر سکتا ہے۔  مضمون کا مرکزی خیال یہ ہے کہ توجہ کا طریقہ کار، ورچوئل ذہانت، اور واضح توجہ کا علم، یہ سب ایک دوسرے سے جڑے ہوئے ہیں اور مختلف تہوں میں ذہانت کو بڑھانے کی کلید ہیں، جس سے جنریٹو AI کی صلاحیتوں میں نمایاں بہتری آتی ہے۔ مصنف اس بات پر زور دیتا ہے کہ توجہ کا طریقہ کار صرف ایک حادثاتی کامیابی نہیں ہے، بلکہ یہ اعلیٰ ذہانت کا ایک اہم جزو ہے جو متعلقہ معلومات کو  متحرک طور پر محدود کرنے کی صلاحیت فراہم کرتا ہے۔</description>
    </item>
    
    <item>
      <title>فضائی ادراک کے ابعاد: AI کی صلاحیت</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_space-dimension-ai/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_space-dimension-ai/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون مصنوعی ذہانت (AI) کی کثیر جہتی فضائی ادراک کی صلاحیتوں پر روشنی ڈالتا ہے۔ مصنف کا خیال ہے کہ انسان، دو جہتی بصری معلومات سے تین جہتی خلائی تصور بنانے کی طرح، کمپیوٹر کی مدد سے چار جہتی، یا اس سے زیادہ جہتوں کے خلائی تصورات کو سمجھ سکتے ہیں۔ تاہم، عملی اطلاق کی حدود کے پیش نظر، اس صلاحیت کا انسانی دائرہ کار میں محدود کردار ہوگا۔  مضمون کا مرکزی خیال AI کی یہی صلاحیت کا استعمال ہے، جس سے AI کثیر جہتی گراف تیار اور سمجھ سکتا ہے۔  انسان دو جہتی سطح پر بصری معلومات کو محدود طور پر سمجھتے ہیں، لیکن AI کو یہی  تین یا چار جہتی فضائی بصارت سے آراستہ کیا جا سکتا ہے۔ اس سے AI کثیر جہتی گراف کو ایک ہی نظر میں، وسیع پیمانے پر سمجھنے کی صلاحیت حاصل کرے گا۔ یہ صلاحیت محض چار جہتوں تک محدود نہیں ہے بلکہ لامحدود جہتوں تک بڑھائی جا سکتی ہے۔  کثیر جہتی گراف کو سمجھنے کی صلاحیت، متعدد جہتوں میں رجحانات کا تجزیہ، حجم کا موازنہ، تناسب کو سمجھنا اور ڈیٹا کے نمونوں کا تجزیہ کرنا ممکن بناتی ہے۔ اس سے قواعد اور قوانین دریافت کرنے میں مدد ملے گی۔  یہ صلاحیت سادہ کثیر جہتی پیٹرن میچنگ سے آگے بڑھ کر ڈیٹا کی گہری سمجھ فراہم کرے گی، کیونکہ یہ مختلف جہتوں کے امتزاج میں یکساں پیٹرن کو بھی پہچان سکتا ہے۔  اس کے علاوہ، AI موجودہ جہتی محوروں کے علاوہ نئے جہتی ڈھانچے بھی دریافت کر سکتا ہے۔  مضمون میں یہ دعویٰ کیا گیا ہے کہ کثیر جہتی بصارت کی یہ صلاحیت سائنسی ایجادات کو تیز کر سکتی ہے۔ مثال کے طور پر، سورج مرکزی نظریہ کا وجود اگر اس سے پہلے کثیر جہتی بصارت کی مدد سے ڈیٹا کو سمجھا جاتا تو، بہت پہلے وجود میں آجاتا۔  مضمون کا اختتام اس نتیجے پر ہے کہ کثیر جہتی جگہ کے لیے مقامی طور پر تربیت یافتہ AI، سائنس اور تعلیمی دنیا میں پیراڈائم کے دائرہ کار کو تیزی سے وسعت دے سکتا ہے۔  تاہم، یہ بھی کہا گیا ہے کہ کچھ پیچیدہ پیراڈائم انسانی سمجھ سے باہر ہو سکتے ہیں، لیکن پھر بھی AI ایسے نظام تیار کر سکتا ہے جو مؤثر طریقے سے کام کریں گے، چاہے ہم ان کے بنیادی اصولوں کو مکمل طور پر نہ سمجھیں۔</description>
    </item>
    
    <item>
      <title>سمفونک انٹیلی جنس کا دور</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_symphonic-intelligence/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_symphonic-intelligence/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>اس مضمون میں، مصنف جنریٹو AI کے استعمال کی موجودہ صورتحال اور اس کے مستقبل کے امکانات کا جائزہ لیتے ہیں، جسے وہ دو زاویوں سے دیکھتے ہیں: تکراری کام اور فلو ورک۔  ابتدائی طور پر، وہ جنریٹو AI کو ایک ٹول کے طور پر استعمال کرنے پر توجہ مرکوز کرتے ہیں، جہاں انسانی کارکن اس ٹول کا استعمال کرتے ہوئے تکراری کام انجام دیتے ہیں۔ تاہم، وہ اس بات کی نشاندہی کرتے ہیں کہ انسانوں کی محدود صلاحیت اور تجربے کی کمی کی وجہ سے اس طریقے کی کارکردگی محدود ہے۔  اس مسئلے کو حل کرنے کے لیے، مصنف تجویز کرتے ہیں کہ کاموں کو معیاری فلو ورک میں تبدیل کیا جائے، جس سے جنریٹو AI اور انسانوں کے درمیان کاموں کی تقسیم ممکن ہو سکے۔ فلو ورک کنورژن سے جنریٹو AI کی مخصوص کاموں پر کارکردگی کو بڑھانے، بہتر علم کے اشتراک اور آسانی سے کاموں کی تقسیم میں مدد ملتی ہے۔  مزید برآں، وہ ورچوئل انٹیلی جنس کی اصطلاح متعارف کراتے ہیں، جہاں ایک جنریٹو AI مختلف کرداروں اور علم کو تبدیل کرکے کاموں کو پروسیس کرتا ہے۔ یہ ورچوئل انٹیلی جنس کمپیوٹر کے ورچوئل مشین کے مترادف ہے، جہاں ایک ہی AI متعدد کاموں کو انجام دے سکتا ہے۔  آخری طور پر، وہ سمفونک انٹیلی جنس کی اصطلاح پیش کرتے ہیں، جو ایک ایسا جنریٹو AI ہے جو متعدد کاموں کو ایک ساتھ انجام دے سکتا ہے، بالکل ایک آرکسٹرا کی طرح جہاں ہر آلہ اپنا کام کرتا ہے۔ مصنف کا خیال ہے کہ سمفونک انٹیلی جنس AGI کی طرف ایک اہم قدم ہو گا، جہاں جنریٹو AI خود بخود کاموں کو سیکھنے اور انجام دینے کی صلاحیت رکھتا ہوگا۔  یہ AGI انسانی مداخلت کے بغیر مختلف تکراری کاموں کو سمجھنے اور انہیں انجام دینے کی صلاحیت سے منسوب ہے۔ اس طرح، مضمون جنریٹو AI کے استعمال کے ارتقاء کا جائزہ لیتا ہے، جو ایک عام ٹول سے ایک پیچیدہ نظام تک بڑھتا ہے جس میں خود مختاری اور سیکھنے کی صلاحیت ہوتی ہے۔</description>
    </item>
    
    <item>
      <title>ورچوئل ذہانت کا آرکیسٹریشن</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_virtual-intelligence-orchestration/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_30_virtual-intelligence-orchestration/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون ورچوئل ذہانت (Virtual Intelligence) اور اس کے آرکیسٹریشن کے تصور پر روشنی ڈالتا ہے۔ ورچوئل مشینوں کی طرح، ورچوئل ذہانت کو حقیقی ذہانت کے اوپر ایک پرت کے طور پر پیش کیا گیا ہے، جہاں متعدد کردار یا گفتگو کو ایک واحد نظام میں یکجا کیا جا سکتا ہے۔  مضمون میں، سسٹم آرکیسٹریشن اور انٹیلی جنس آرکیسٹریشن کے درمیان فرق بیان کیا گیا ہے۔ سسٹم آرکیسٹریشن میں، متعدد الگ الگ AI ماڈلز ایک ساتھ کام کرتے ہیں، جبکہ انٹیلی جنس آرکیسٹریشن میں ایک واحد AI ماڈل متعدد ورچوئل ذہانتوں کو اپنے اندر یکجا کرتا ہے۔ انٹیلی جنس آرکیسٹریشن کی اہمیت اس کی لچک اور تیزی سے بہتری کی صلاحیت میں ہے۔ سسٹم آرکیسٹریشن کے مقابلے میں، انٹیلی جنس آرکیسٹریشن سسٹم ڈویلپمنٹ کی ضرورت کو کم کرتا ہے اور صرف پرومٹ ہدایات کے ذریعے کام انجام دے سکتا ہے۔ مزید وضاحت کرتے ہوئے، مضمون میں &quot;حتمی غور و فکر&quot; کا تصور پیش کیا گیا ہے، جہاں AI متعدد ورچوئل ذہانتوں کے کرداروں اور ڈھانچوں میں بار بار تبدیلیاں کرکے،  غلط فہمیوں اور غلطیوں کو کم کرتا ہے اور سوچ کے دائرہ کار کو وسیع کرتا ہے۔ یہ حتمی غور و فکر نئی دریافتوں اور تخلیقی صلاحیتوں کو بھی جنم دے سکتا ہے۔  آخر میں، مضمون کا نتیجہ یہ نکلتا ہے کہ ورچوئل ذہانت کے ذریعے، ایک واحد AI ماڈل متعدد کرداروں میں سوئچ کر کے پیچیدہ فکری کام انجام دے سکتا ہے، بغیر کسی سسٹم ڈویلپمنٹ کی ضرورت کے۔  یہ تنظیمی غور و فکر AI کو ناکامیوں سے سیکھنے اور اپنا علم اپ ڈیٹ کرنے کی اجازت دیتا ہے، جس سے کاروبار میں AI کے استعمال کے امکانات میں اضافہ ہوتا ہے۔</description>
    </item>
    
    <item>
      <title>سمولیشن سوچ اور زندگی کا آغاز</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_29_simulation-thinking/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_29_simulation-thinking/</guid>
      <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون زندگی کی ابتدا اور سمولیشن سوچ کے تصور پر روشنی ڈالتا ہے۔ مصنف کا کہنا ہے کہ زندگی کی ابتدا کو سمجھنے کے لیے صرف ایک عارضی یا حادثاتی واقعے پر انحصار کرنے کے بجائے، جمع اور تعامل کے نقطہ نظر سے اس مسئلے کا جائزہ لینا چاہیے۔ زمین پر پانی اور ہوا کی مسلسل گردش مختلف کیمیائی مادوں کو ملا کر قدرے زیادہ پیچیدہ کیمیائی مادے بناتے ہیں۔ یہ عمل سیارے کے مقامی علاقوں تک محدود نہیں رہتا، بلکہ پوری زمین پر ہوتا ہے اور عالمی گردش کی وجہ سے محدود جگہوں پر ہونے والے واقعات پوری زمین پر پھیل جاتے ہیں۔ مصنف اس عمل کو &quot;سمولیشن سوچ&quot; کا نام دیتے ہیں، جس میں نتائج کو سمجھنے کے لیے جمع اور تعامل کو بتدریج ٹریس کرنا شامل ہے۔ مصنف کے مطابق، یہ سوچ کا ایک ایسا طریقہ ہے جس میں جمع اور تعامل کو قدم بہ قدم ٹریس کرنے سے پیچیدہ مظاہر کو سمجھا جا سکتا ہے۔ زندگی کی ابتدا کے پہلے قدم کے طور پر مصنف سادہ کیمیائی مادوں سے قدرے زیادہ پیچیدہ کیمیائی مادوں کی جانب منتقلی کو بیان کرتے ہیں۔ انہوں نے دلیل دی ہے کہ یہ منتقلی خود برقرار رکھنے، نقل تیار کرنے، اور میٹابولزم کی ابتدائی شکل کو ظاہر کرتی ہے۔ یہ قدرے زیادہ پیچیدہ کیمیائی مادے پولیمرز جیسے پروٹین اور نیوکلک ایسڈ بھی تشکیل دیتے ہیں، جو زندگی کے لیے ضروری ہیں۔ زمین کی جھیلیں اور تالاب الگ تھلگ سائنسی تجربہ گاہوں کی طرح کام کرتے تھے جہاں کیمیائی تعاملات ہوئے۔  مضمون میں گرد کے بادل کے کردار پر بھی زور دیا گیا ہے جو بالائے بنفشی شعاعوں سے حفاظت فراہم کرتے ہوئے کیمیائی مادوں کی ترکیب کے لیے ایک ماحول فراہم کرتے ہیں۔ سمولیشن سوچ کے تصور پر زور دیتے ہوئے، مصنف نے اسے سافٹ ویئر کی ترقی کے لیے ایک ناگزیر مہارت کے طور پر پیش کیا ہے۔ سافٹ ویئر ڈویلپرز کو پروگرام کی اندرونی کام کاج اور کسٹمر کی ضروریات دونوں کو سمجھنے کے لیے دوہری سمولیشن سوچ کی ضرورت ہوتی ہے۔  مصنف سمولیشن سوچ کو قدرتی زبان پر مبنی ایک فکری طریقہ قرار دیتے ہیں، جو رسمی تاثرات کی ضرورت کے بغیر پیچیدہ تصورات کو سمجھنے میں مدد کرتی ہے۔ مضمون کا اختتام اس نتیجے پر ہوتا ہے کہ سمولیشن سوچ سائنسی اور تکنیکی شعبوں میں ایک قیمتی مہارت ہے جو زندگی کے آغاز جیسے پیچیدہ مظاہر اور سافٹ ویئر ڈویلپمنٹ جیسے عملی کاموں دونوں کو سمجھنے میں مدد کرتی ہے۔</description>
    </item>
    
    <item>
      <title>بہاؤ کے کام میں تبدیلی اور نظام: تخلیقی AI کے استعمال کا جوہر</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_29_tool-vs-system/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_29_tool-vs-system/</guid>
      <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون تخلیقی AI کے استعمال کے ذریعے کاروباری کارکردگی کو بہتر بنانے کے لیے ایک نئی نقطہ نظر پیش کرتا ہے۔ مصنف کا کہنا ہے کہ AI کو صرف ایک ٹول کے طور پر استعمال کرنے کے بجائے، اسے تکراری کام کو بہاؤ کے کام میں تبدیل کرنے اور اسے منظم کرنے کے لیے استعمال کرنا چاہیے۔ تکراری کام وہ کام ہوتا ہے جو آزمائش و غلطی کے ذریعے بتدریج بہتر ہوتا ہے، جبکہ بہاؤ کا کام ایک ایسا عمل ہے جو بتدریج آگے بڑھ کر ایک نتیجہ پیدا کرتا ہے۔ مصنف کا دعویٰ ہے کہ بہاؤ کے کام کو منظم کرنا پیداواری صلاحیت اور معیار کو بہتر بناتا ہے، جیسا کہ صنعتی انقلاب اور آئی ٹی انقلاب کی مثالیں سے ظاہر ہوتا ہے۔ تخلیقی AI کی موافقت کی صلاحیت اسے تکراری کاموں کو بہاؤ کے کام میں تبدیل کرنے کی اجازت دیتی ہے، جو انسانی کارکنوں کے لیے بہت مشکل ہوتا ہے۔ مضمون میں کمپنی کے اندرونی قواعد کے بارے میں پوچھ گچھ کے جوابات دینے کے کام کی مثال دی گئی ہے کہ کس طرح AI کا استعمال صرف ٹول کے طور پر استعمال کرنے کے بجائے، بہاؤ کے کام میں تبدیل کرنے سے زیادہ مؤثر ہوتا ہے۔ مصنف نے بہاؤ کے کام کو تفصیل سے بیان کیا ہے اور اسے کس طرح منظم کیا جا سکتا ہے۔ مصنف کا کہنا ہے کہ بہت سے لوگ تخلیقی AI کو صرف ایک ٹول کے طور پر استعمال کرتے ہیں یا اسے تکراری کاموں کے لیے استعمال کرنے کی کوشش کرتے ہیں، جس کے نتیجے میں محدود نتائج ملتے ہیں۔ مصنف یہ نتیجہ اخذ کرتا ہے کہ تخلیقی AI کا مؤثر استعمال تکراری کام کو بہاؤ کے کام میں تبدیل کرنے اور اس کی نظام سازی پر منحصر ہے۔</description>
    </item>
    
    <item>
      <title>لیکوڈویئر کے دور میں ہمہ جہت انجینئرز</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_28_liquidware-allrounder/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_28_liquidware-allrounder/</guid>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون جنریٹو AI کی پروگرامنگ صلاحیتوں اور ان کے مستقبل کے اثرات کا جائزہ لیتا ہے۔ مصنف بیان کرتا ہے کہ کیسے جنریٹو AI، بڑے لسانی ماڈلز کا استعمال کرتے ہوئے، سافٹ ویئر کی تیاری میں تیزی سے ترقی کر رہا ہے۔ وہ بتاتے ہیں کہ انسان کی درست ہدایات کی مدد سے AI خود بخود پروگرام کو تکمیل تک پہنچا سکتا ہے۔ تاہم، AI کی حدود اور غیر واضح ہدایات کی وجہ سے غلطیاں بھی ہو سکتی ہیں۔  مضمون میں لیکوڈویئر (Liquiware) کا تصور پیش کیا جاتا ہے، جو کہ ایک ایسا سافٹ ویئر ہے جسے صارف جنریٹو AI کی مدد سے تبدیل اور تخصیص کر سکتا ہے۔  لیکوڈویئر روایتی سافٹ ویئر سے زیادہ لچکدار اور صارف دوست ہے۔ مصنف یہ بھی بیان کرتا ہے کہ لیکوڈویئر کی وجہ سے، سافٹ ویئر ڈویلپرز کا رول بدل جائے گا، اور فل اسٹیک انجینئرز کی جگہ ہمہ جہت انجینئرز کی مانگ بڑھے گی۔ ہمہ جہت انجینئرز وہ افراد ہیں جو مختلف سسٹم اسٹیک، پلیٹ فارمز، اور فریم ورکس کے بارے میں جامع علم رکھتے ہیں اور جنریٹو AI کی مدد سے مختلف سافٹ ویئر سسٹمز کو آپس میں جوڑ سکتے ہیں۔  مضمون میں اس بات پر زور دیا گیا ہے کہ ہمہ جہت انجینئرز کو ہر سسٹم اسٹیک کی گہرائی سے تفہیم کی ضرورت نہیں ہے، بلکہ انہیں بگس، سیکیورٹی خامیوں، اور تکنیکی قرضے کو کم کرنے کے طریقہ کار تیار کرنے کی صلاحیت کی ضرورت ہے۔  مضمون میں ہمہ جہت سافٹ ویئر کی ایک مثال دی گئی ہے، جیسے ایک ای کامرس ویب ایپ جو صارف کے کمیونٹی پلیٹ فارم، اومنی ڈیوائس مطابقت، اومنی پلیٹ فارم مطابقت، اور لیکوڈویئر کے ساتھ مربوط ہو۔ مصنف کا خیال ہے کہ جنریٹو AI، لیکوڈویئر، اور ہمہ جہت سافٹ ویئر کی ترقی موجودہ حقیقت ہے اور مستقبل میں IT انجینئرز کیلئے ہمہ جہت انجینئرنگ میں مہارت حاصل کرنا ضروری ہے۔ وہ ہمہ جہت سوشل انجینئرنگ کا تصور بھی پیش کرتے ہیں، جو معاشرے کو جامع طور پر بہتر بنانے پر توجہ مرکوز کرے گا۔</description>
    </item>
    
    <item>
      <title>سوچنے کی تقدیر: مصنوعی ذہانت اور انسانیت</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_12_fate-of-thinking/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_12_fate-of-thinking/</guid>
      <pubDate>Sat, 12 Jul 2025 00:00:00 GMT</pubDate>
      <description>مصنف کا خیال ہے کہ مصنوعی ذہانت (AI) کی ترقی سے انسانوں کی سوچ کے انداز میں تبدیلی آئے گی۔ جیسے میکانائزیشن نے جسمانی مشقت سے آزادی دی، AI ذہنی کاموں کو سنبھال کر ایک نئی قسم کی ذہنی سرگرمی کا مطالبہ کرے گا۔ مصنف سافٹ ویئر ترقی کے لیے &quot;پروسیس پر مبنی&quot; نقطہ نظر تجویز کرتا ہے، جہاں پروگرام کے مرکزی ماڈیول کو ایک پروسیس کے طور پر دیکھا جاتا ہے۔ یہ پروسیس واقعات سے شروع ہوتا ہے، مختلف کرداروں کے ذریعے ہینڈل ہوتا ہے، اور ختم ہوتا ہے۔ یہ نقطہ نظر انسانی سوچ کے ساتھ ہم آہنگ ہے۔ AI کی مدد سے، سافٹ ویئر کی تیاری میں نقل کو برداشت کرنے کی اجازت ہوتی ہے، کیونکہ AI کوڈ کو منظم کرنے کے اخراجات کو کم کر دے گا۔ یہ &quot;انفرادی اصلاح&quot; کے تصور کی طرف لے جاتا ہے، جو مجموعی اصلاح کے مقابلے میں ہے، جہاں ہر پروسیس کو انفرادی طور پر ٹون کیا جاتا ہے۔ مصنف اسے &quot;انفرادی اصلاح کا معاشرہ&quot; کہتا ہے، جہاں معیاری اقدار کی بجائے انفرادی حالات پر توجہ دی جاتی ہے۔ مصنف &quot;موضوعی فلسفہ&quot; کی تجویز کرتا ہے، جس کا مطلب ہے کہ ہر واقعے کے لیے گہرائی سے غور و فکر کرنا، اور ان کی انفرادیت کو مدنظر رکھتے ہوئے فیصلے کرنا۔ ایک فریم ورک، سوچ کے لیے تصوراتی ڈھانچہ، اس اصلاح کے لیے ضروری ہے۔ مجموعی اصلاح کے برعکس، انفرادی اصلاح میں، بہت سے لوگوں کو ہر معاملے کے لیے فریم ورک ڈیزائن کرنے کی صلاحیت کی ضرورت ہوگی۔ آخر میں، مصنف کا خیال ہے کہ AI کی وجہ سے، انسانوں کو سوچنے کی زیادہ ضرورت ہوگی، کیونکہ وہ انفرادی اصلاح اور موضوعی فلسفے سے وابستہ ہوں گے۔ AI ذہنی کام انجام دے سکتی ہے، لیکن حتمی فیصلہ انسانوں کو ہی کرنا ہوگا۔ مصنف اسے &quot;سوچنے کی تقدیر&quot; کہتا ہے۔</description>
    </item>
    
    <item>
      <title>کاروباری عمل پر مبنی سافٹ ویئر کی دعوت</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_07_11_business-process-oriented/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_07_11_business-process-oriented/</guid>
      <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون کاروباری عمل پر مبنی سافٹ ویئر کے ایک نئے تصور کی وضاحت کرتا ہے جو تنظیمی سرگرمیوں کو بہتر بنانے کے لیے ڈیزائن کیا گیا ہے۔  مضمون کا مرکزی خیال یہ ہے کہ سافٹ ویئر کو انسانی ادراک کے مطابق ڈیزائن کرنا چاہیے، اور اس لیے، کاروباری عمل کو ایک ہی یونٹ کے طور پر دیکھ کر سافٹ ویئر کو تیار کرنا چاہیے۔ روایتی آبجیکٹ پر مبنی سافٹ ویئر کے برعکس، جہاں ڈیٹا اور پروسیسنگ کو الگ الگ یونٹس کے طور پر ڈیزائن کیا جاتا ہے، کاروباری عمل پر مبنی سافٹ ویئر کاروباری دستورالعمل، کاروباری نظام اور ان پٹ معلومات کو ایک ہی فائل میں مربوط کرتا ہے۔ یہ فائل خود ایک قابل عمل سافٹ ویئر کے طور پر کام کرتی ہے، جسے انسانوں کے ذریعے یا مصنوعی ذہانت کی مدد سے چلایا جا سکتا ہے۔ مضمون میں وضاحت کی گئی ہے کہ کس طرح مصنوعی ذہانت اس فائل میں موجود کاروباری دستورالعمل کو سمجھ کر اور انسانوں کی مدد کر کے کام کو آسان بناتی ہے۔ اس فائل میں، کاروباری دستورالعمل اور ان پٹ معلومات کے علاوہ، رابطے کی معلومات بھی شامل ہیں تاکہ کسی بھی سوال یا بہتری کی درخواست کی جا سکے۔ اس سے تنظیمی علم جمع ہوتا ہے اور کاروباری عمل میں بہتری آتی ہے۔  مضمون کا دعویٰ ہے کہ اس طریقے سے، تنظیمیں تیزی سے سیکھنے والی تنظیمیں بن جاتی ہیں، جو روایتی تنظیموں کے مقابلے میں زیادہ موثر طریقے سے کام کرتی ہیں اور اس میں انسانوں کو کم سے کم کام کرنا پڑتا ہے جبکہ مصنوعی ذہانت پیچیدہ کاموں کو خود بخود انجام دیتی ہے۔ مارک ڈاؤن جیسے AI دوستانہ فائل فارمیٹ کا استعمال کرنے کی بھی تجویز دی گئی ہے تاکہ مصنوعی ذہانت اسے آسانی سے پڑھ سکے۔  مضمون کا خاتمہ تیزی سے سیکھنے والی تنظیم کے تصور سے ہوتا ہے جس میں انسانوں اور مصنوعی ذہانت کا ایک مربوط نظام کام کرتا ہے، جس سے تنظیمی کارکردگی اور لچک میں بہتری آتی ہے۔</description>
    </item>
    
    <item>
      <title>فریم ورک ڈیزائن ایک فکری صلاحیت کے طور پر</title>
      <link>https://katoshi-mfacet.github.io/ur/articles/2025_06_29_framework-design-ability/</link>
      <guid>https://katoshi-mfacet.github.io/ur/articles/2025_06_29_framework-design-ability/</guid>
      <pubDate>Sun, 29 Jun 2025 00:00:00 GMT</pubDate>
      <description>یہ مضمون فریم ورک ڈیزائن کو ایک فکری صلاحیت کے طور پر بیان کرتا ہے جو سائنس اور دیگر تعلیمی شعبوں میں ایک اہم کردار ادا کرتی ہے۔ مصنف کا استدلال ہے کہ تعلیمی دنیا عام طور پر مشاہدے کے ذریعے حقائق کی دریافت پر مرکوز ہے، جبکہ ترقی ڈیزائن کے ذریعے نئی اشیاء اور نظام کی ایجاد پر مرکوز ہے۔ تاہم، تعلیمی دنیا کے اندر بھی ڈیزائن کی فکری سرگرمی موجود ہے، جیسا کہ زمین مرکزی اور سورج مرکزی نظریات، نیوٹنین میکانکس، نظریہ اضافیت، اور کوانٹم میکانکس جیسی مثالوں سے ظاہر ہوتا ہے۔ مصنف کا کہنا ہے کہ یہ نظریات حقائق کی دریافت نہیں بلکہ ڈیزائن کے ذریعے ایجادات ہیں، اور ان کی افادیت کی بنیاد پر منتخب کیے جاتے ہیں، نہ کہ ان کی درستگی کی بنیاد پر۔  مضمون میں یہ بھی بحث کی گئی ہے کہ مشاہدے کی بنیاد پر دریافت اور ڈیزائن کی بنیاد پر ایجاد مختلف فکری سرگرمیاں ہیں جن کے لیے مختلف مہارتوں کی ضرورت ہوتی ہے۔ زیادہ تر علماء اور محققین مشاہدے کی بنیاد پر دریافت میں مہارت رکھتے ہیں، لیکن ان میں فریم ورک ڈیزائن کی مہارت کم ہوتی ہے۔ تاہم، انجینئرز، خاص طور پر سافٹ ویئر انجینئرز، اکثر خلاصہ تصورات کو میٹا لیول پر دوبارہ ترتیب دینے والے کام کرتے ہیں، جس کی وجہ سے ان میں فریم ورک ڈیزائن کی مہارت کا امکان زیادہ ہوتا ہے۔ مضمون کا اختتام اس نکتے پر ہوتا ہے کہ تعلیمی فریم ورک ڈیزائن کے لیے خلاصہ تصوراتی ڈیزائن میں مہارت اور نئے ڈیزائن ماڈلز پر غور کرنے کی عادت ضروری ہے۔</description>
    </item>
    
  </channel>
</rss>