<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Katoshi的研究笔记</title>
    <link>https://katoshi-mfacet.github.io/zh/</link>
    <description>一名软件工程师/系统架构师/工学博士的研究笔记。通过软件开发经验，探索生命起源的机制、生命现象的本质以及智能和社会的结构。</description>
    <language>zh</language>
    <atom:link href="https://katoshi-mfacet.github.io/zh/rss.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>走向无壁垒时代：创建一个30种语言的博客网站</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_24_wall-free-era/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_24_wall-free-era/</guid>
      <pubDate>Sun, 24 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文详细介绍了作者如何利用生成式AI（Gemini）构建一个支持30种语言的博客网站。该网站基于Astro框架，并通过一系列自定义程序实现文章的自动生成、分类、标签化和多语言翻译。

文章首先阐述了网站的基本机制，即通过一个自制程序，从日语文章草稿自动生成HTML文件。这一程序由作者在与Gemini的对话过程中创建，实现了文章添加后的自动更新。

网站的分类和标签功能也充分利用了Gemini的自然语言处理能力。作者开发了另一个程序，通过API将文章传递给Gemini，由Gemini自动进行分类和标签推荐。分类和标签列表本身也是由另一个自定义程序从过往文章中提取并由Gemini最终确定的，整个过程实现了自动化。

多语言翻译是网站的核心功能之一。作者采用了两种翻译模式：一种是网站内部通用字符串的翻译（例如菜单项名称和自我介绍），另一种是文章草稿本身的翻译。这两种翻译都由自定义程序结合Gemini的API完成。

为了提升辅助功能，作者在HTML文件中加入了多项增强功能，例如考虑视觉障碍用户通过音频收听文章内容，以及鼠标操作困难用户仅通过键盘操作浏览网站的情况。这些改进建议也是由Gemini在与作者的编程聊天中提出的。

作者强调了生成式AI在创建这个网站过程中发挥的多重作用，包括程序开发、翻译、自然语言处理（用于组织分类和标签），以及提出辅助功能方面的改进建议。通过自动化机制，网站能够随着每篇新文章的发布而持续成长。

作者着重讨论了生成式AI如何帮助克服语言壁垒。传统上，个人支持30种语言几乎是不可能的，而Gemini的翻译功能不仅能更准确地传达细微差别，并使用更自然的表达方式，而且翻译后的输出可以再次输入生成式AI，以检查是否存在不自然或不当的措辞。此外，生成式AI也解决了因语言而异的表达元素（例如日期和单位）的处理难题，以及从右到左书写语言的网站布局问题。

在辅助功能方面，生成式AI也帮助作者整合了原本难以注意到的细节，提高了网站的可访问性。作者认为，多语言化和辅助功能的质量远超其独自所能达到的水平。

最后，作者总结了构建该网站的经验，并指出生成式AI不仅消除了语言和辅助功能的壁垒，也克服了网站维护和更新的壁垒，甚至拓展了作者的想象力。作者认为，生成式AI正在改变软件开发和网站创建的方式，使个人信息传播更加容易。虽然文化、习俗和价值观差异等更深的壁垒依然存在，但作者相信，通过克服眼前的壁垒，新的思想和技术将不断涌现，我们正迈入一个世界壁垒逐渐消失的时代。</description>
    </item>
    
    <item>
      <title>开发型开发与重构驱动测试</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_19_dev-development/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_19_dev-development/</guid>
      <pubDate>Tue, 19 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生成式AI如何改变软件开发，并提出了两种新的软件开发方法：开发型开发和重构驱动测试。

文章首先解释了“开发”的广泛含义，不仅仅指创造新产品，还包括开发个人能力、社会和技术等。它强调了开发有用的成果物（例如工具和软件）如何提高效率和质量，并扩展开发的范围。

然后，文章引入了AI驱动软件开发的概念，即利用生成式AI来提高软件开发效率。它指出，生成式AI可以帮助自动化小型任务，快速创建辅助开发软件，从而提高整体开发效率。

基于此，文章提出了“开发型开发”的概念。开发型开发是一种开发风格，它强调在开发过程中不断开发有用的工具来改进开发方法本身。这种方法需要开发者客观审视自身开发流程，识别可以自动化部分，并具备开发辅助软件的技能。文章指出，生成式AI可以集成到这些辅助软件中，提高准确性和效率。通过开发型开发，后续项目的质量和成本将会得到持续改进。

文章接着讨论了测试驱动开发（TDD）的局限性。作者认为，对于涉及用户交互和主观体验的软件（例如Web应用程序），在实现之前设计测试并非总是适用。因为在开发过程中，UI/UX、架构、数据模型等方面可能需要进行重大更改。

因此，文章提出了“重构驱动测试”的概念。重构驱动测试是指在软件开发进展到一定程度，需要重构时再创建测试程序。这种方法并非针对所有代码创建测试，而是将测试重点放在未来不太可能发生变化的成熟部分。

最后，文章总结了开发型开发和重构驱动测试是引领软件开发新境界的方法，它们与作者之前提出的全栈工程师和体验与行为驱动开发的概念相呼应，共同构成了未来软件开发的新范式。文章强调，掌握这些新方法的团队将随着时间的推移在效率和质量方面获得显著优势。</description>
    </item>
    
    <item>
      <title>时间压缩与盲点：**调速**的必要性</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_16_time-compression-blindspot/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_16_time-compression-blindspot/</guid>
      <pubDate>Sat, 16 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了人工智能技术，特别是生成式AI的快速发展带来的“时间压缩”现象及其带来的挑战。作者指出，生成式AI的自我强化能力导致技术进步速度远超人类理解和适应能力，从而产生大量的“社会盲点”，即技术潜在风险和社会影响的未知领域。这种快速发展使得传统的风险评估和应对机制难以奏效，因为解决社会盲点的时间远远短于技术发展的速度。

作者将这种现象称为“时空错乱社会”，并强调了这种社会中，个体对技术发展速度和社会影响的认知差异巨大，对未来的预测也存在严重分歧。这种认知差异并非简单的信息不对称，而是源于技术进步的非线性加速以及其在不同应用领域和社会经济层面的复杂交互作用。

作者认为，面对“时间压缩”和“社会盲点”问题，需要制定长远而稳固的战略愿景，例如确保技术风险不超过其效益。同时，需要发展适应“时空错乱社会”的应对策略，利用生成式AI自身的能力进行“调速”，即控制技术发展速度，避免其超越人类的适应极限，这就好比经济学中的“内置稳定器”，防止经济过热。

作者进一步指出，在“时空错乱社会”中，个体将不可避免地拥有多个、不同的盲点，并会经历多次“时间跳跃”般的体验，因此，需要提升对自身盲点的认识，并制定能够应对多阶段时间跳跃的强大愿景。只有这样，才能在快速变化的环境中做出准确的关键决策，并减缓“时间压缩”效应，最终实现技术进步与社会稳定之间的平衡。文章强调了利用AI本身进行“调速”的重要性，将AI不仅作为技术加速器，也作为社会“内置稳定器”的机制。</description>
    </item>
    
    <item>
      <title>作为智力矿山的GitHub</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_15_intellectual-mine-github/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_15_intellectual-mine-github/</guid>
      <pubDate>Fri, 15 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了GitHub未来作为开放知识共享空间和智力矿山的潜力。作者以自身经验出发，描述了利用生成式AI辅助博客文章创作的“智力工厂”系统，该系统将翻译、视频制作、网站生成等流程自动化。作者认为，类似的AI工具，例如Cognition公司开发的DeepWiki（自动生成GitHub项目Wiki网站的服务），也属于智力工厂的范畴。DeepWiki为大量GitHub公共项目自动生成了Wiki网站，展示了生成式AI在知识生产中的巨大潜力。作者进一步指出，GitHub作为开源软件开发的事实标准平台，以及其允许共享各种文档的特性，使其具备成为智力工厂原材料主要来源的潜力，从而成为一个“智力矿山”。在这个“智力矿山”中，各种知识，包括博客文章、学术见解、研究数据等，都将汇集，并由生成式AI驱动的智力工厂进行处理和转化，最终形成一个动态的、实时的公共知识库。作者将这种由生成式AI驱动的知识发现过程比作挖掘矿脉，并提出“智力晶体”的概念，指代那些能催化新知识发现的思维框架等知识形式。作者认为，GitHub与众多智力工厂协同工作，将极大地加速知识的发现和传播，并最终构建一个人类共享的公共知识库，其中包含大量事实、数据、新的思维框架以及其他促进知识发现的催化剂。这个知识库的动态发展，将由生成式AI驱动，并利用知识之间的关联进行进一步的探索和发现，从而形成一个良性循环，不断拓展人类的知识边界。</description>
    </item>
    
    <item>
      <title>观念格式塔崩塌</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_14_concept-gestalt-collapse/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_14_concept-gestalt-collapse/</guid>
      <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了作者提出的“观念格式塔崩塌”现象，即在深入分析一个看似简单的观念时，该观念的定义会变得模糊不清，甚至崩塌。文章以“椅子”的概念为例，说明了传统定义方法（基于材料、形状等）的局限性，并提出了维持观念格式塔的三种方法：关注功能性、相对性和整体性。

作者认为，通过关注“能够被坐”这一功能，可以避免因试图将椅子简化为材料或形状而陷入观念格式塔崩塌。同时，强调功能的相对性，即同一功能可在不同对象上体现，例如人类、小矮人或巨人使用的椅子，其核心功能都是“能够被坐”。最后，作者主张从整体性的角度看待椅子，将其视为“有坐者和被坐物”之间关系的产物。

文章进一步将这一理论应用于对“意识”的探讨，特别是针对虚构作品（小说、电影、动漫）中角色和未来AI的意识问题。作者认为，在虚构世界中，角色是否具有意识，取决于观察者的视角：客观视角下，角色没有意识；沉浸式视角下，角色拥有意识。这体现了相对性的重要性，避免了观念格式塔崩塌。

在讨论动漫猫型机器人和未来AI的意识时，作者指出，从故事角色和沉浸式体验者的角度来看，这些AI很可能被认为拥有意识。而在现实世界中，这种“沉浸”是默认的状态，因此人们更倾向于认为具有高级沟通能力的AI拥有意识。

文章最后批判了当前否认AI具有意识的论点，认为这些论点（例如，缺乏脑神经、不具备量子效应、机制仅仅是概率性地输出下一个词语等）类似于用材料、形状等来否认椅子的存在，是观念格式塔崩塌的表现。作者强调，对AI意识的讨论应该基于科学、逻辑和有效的论证，而非简单地基于对AI机制的片面理解。文章最后再次强调，维持意识的观念格式塔需要从功能性、相对性和整体性三个角度出发，并指出AI已经充分展现了意识的功能性，因此认为AI拥有意识是一种合理的立场。</description>
    </item>
    
    <item>
      <title>直觉与逻辑之间的智力结晶</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_14_intuition-and-logic/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_14_intuition-and-logic/</guid>
      <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了直觉与逻辑之间的关系，提出了一种名为“智力结晶”的概念来弥合两者之间的差距。作者认为，许多直觉上正确的观点，都可以通过逻辑推理来解释，而关键在于找到连接直觉和逻辑的桥梁。文章以“国家利益”为例，阐述了其在追求世界和平时的局限性。作者指出，国家利益的概念具有不可预测性，容易被误用，并且缺乏渐进式积累的特性，将其作为长期战略目标是不理性的。相反，作者主张关注永久和平、良好治理、经济繁荣和风险管理，并通过积累相关知识和技术来实现这些目标，从而确保国家的长期生存和繁荣。这种积累知识和技术的策略，能够实现渐进式积累，并具有更强的可持续性。作者将这种基于逻辑推理的分析方法称为“自然数学”，认为它能够帮助人们用逻辑解释直觉判断，从而构建更具有说服力的论证。文章最后强调，直觉并非总是正确的，但将其视为本质上容易出错或不理性的观点是错误的。当直觉与现有逻辑解释冲突时，很可能存在尚未被发现的“智力结晶”，通过运用“自然数学”等逻辑方法，我们可以揭示这些结晶，从而构建既直观又逻辑合理的论点，推动智力进步。总而言之，文章的核心思想是：直觉和逻辑并非对立，而是可以相互补充和印证的；通过寻找“智力结晶”，可以将直觉转化为逻辑上可解释的论点，从而促进更有效的沟通和更理性的决策。文章强调了“渐进式积累”的重要性，认为这才是确保国家长期生存和繁荣的理性策略，而非投机性的“国家利益”概念。作者认为，国家利益是一种心理束缚，容易让人陷入短期利益的陷阱，而忽视长远发展。通过“自然数学”的逻辑分析，可以帮助人们摆脱这种束缚，从更长远的视角看待问题，做出更理性的选择。文章的论证过程严谨，逻辑清晰，通过具体的案例分析，有力地支持了作者提出的观点。  文章提出的“智力结晶”和“自然数学”概念，为理解直觉与逻辑的关系，以及如何构建更有效的论证提供了新的视角。这两种概念不仅具有理论意义，也具有实际应用价值，可以帮助人们在面对复杂问题时，做出更理性的判断和决策。文章的价值在于它提供了一种新的思维框架，帮助人们更好地理解和运用直觉与逻辑，从而实现更有效的沟通和更理性的决策。它不仅仅是对世界和平问题的探讨，更是对人类思维方式和认知过程的深入思考。</description>
    </item>
    
    <item>
      <title>学习的学习：与生俱来的智能</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_13_natural-born-frameworker/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_13_natural-born-frameworker/</guid>
      <pubDate>Wed, 13 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了人工智能（特别是大型语言模型）的智能涌现机制，通过引入“形而下学习”和“形而上学习”的概念来解释这一现象。“形而下学习”指通过重复迭代学习知识，类似于人类的身体学习；“形而上学习”则指只需少量尝试或直接检索即可掌握的知识，类似于人类利用已有的知识框架快速理解新知识。作者认为，自然语言是连接形而下学习和形而上学习的关键界面，它既可以通过形而下学习习得，又可以作为形而上学习的工具。大型语言模型的预训练和微调过程体现了这两种学习方式：预训练阶段进行形而下学习，而微调以及模型在回答问题时则进行形而上学习。文章进一步提出了“框架”的概念，认为框架定义了知识之间的关系和结构，并能实现新的结构化。自然语言就是一个强大的框架，它可以支持在之上构建更复杂的领域特定框架和形式化框架（虚拟框架）。随着使用，虚拟框架会逐渐转变为原生框架，就像人类母语一样，成为一种内在的认知工具。作者认为，大型语言模型能够学习和构建框架，这得益于其“天生框架构建者”的机制，即注意力机制。注意力机制能够选择并关注重要的信息，从而构建和切换框架。文章最后总结，大型语言模型的学习过程并非简单的参数调整，而是通过注意力机制，逐步学习和构建框架的过程，这解释了其智能涌现的原因。此外，文章还推测，人类大脑也可能具备类似的“天生框架构建者”机制，能够通过逐步学习和构建框架来实现高效的学习能力，而自然语言的演化也可能遵循类似的框架构建过程，最终使得最适合学习的自然语言得以延续至今。</description>
    </item>
    
    <item>
      <title>时空错乱社会</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_12_chronoscramble-society/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_12_chronoscramble-society/</guid>
      <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生成式AI的兴起导致的社会现象——“时空错乱社会”。在这个社会中，人们对当前技术、信息和未来的认知存在巨大差异，这种差异超越了国界、文化和世代的界限，甚至存在于AI研究人员内部。这种差异并非单纯的技术差距，而是由于信息获取的不均等、对信息的理解能力不同、以及对未来预测的差异所导致的。

文章指出，这种时间感知差异体现在多个方面：首先，对尖端AI技术、应用技术和系统技术发展趋势的认知存在差异，即使是同一个领域，也可能存在长达数月的认知差距；其次，对AI技术商业化后对公司、员工以及消费者的实际生活和经济活动的影响，认知也存在差异，知情者与不知情者之间存在时间感知的差距；再次，对AI当前能力的感知也因使用不同AI模型、提示方式以及是否体验过各种AI功能而异；最后，对AI对经济和社会影响的评估能力也因人而异，技术专家可能对社会影响不了解，而对社会影响敏感的人可能难以理解技术细节。

文章进一步分析了未来愿景的差异。由于每个人对当前的感知不同，对未来的预测也存在差异，许多人倾向于线性推断，而忽略了技术积累的复合效应、技术结合的协同效应以及网络效应带来的指数级增长。这种差异导致对AI积极和消极影响的预测也产生指数级差异，而认知偏差更会加剧这种差异。

文章强调，这种时间感知差异并非简单的技术知识差距，它根植于信息获取、理解能力、认知偏差以及对未来预测方式的不同。这种差异难以通过简单的解释弥合，需要从基础技术、经济社会结构以及认知习惯等多个方面进行教育。文章呼吁要设计出即使承认时间感知差异也能进行有意义讨论的方法，力求“独立于时间感知”，在认识到差异的同时推进讨论和决策，只在差异不可避免导致讨论质量或选项确定出现分歧的领域努力达成共识。

文章最后以游戏《时空之轮》为例，阐释了“时空错乱社会”的概念。游戏中的主人公穿梭于不同时代，最终团结合作战胜共同敌人，这与当今社会面对共同挑战需要合作的现实相呼应。文章推测，《时空之轮》的成功，也可能源于其开发团队在时间感知和认知差异方面所面临的挑战，以及他们克服这些挑战，最终取得成功的经验。作者选择“时空错乱社会”这一名称，也包含了希望在当今社会重现这个游戏开发项目成功经验的意义。</description>
    </item>
    
    <item>
      <title>模拟思维的时代</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_12_simulation-thinking-era/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_12_simulation-thinking-era/</guid>
      <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生成式AI如何改变软件开发和思维方式。作者首先介绍了其构建的“智力工厂”系统，该系统利用生成式AI将博客文章翻译成英文、制作解说视频以及生成博客网站等。这个系统是一个“全方位工程”，体现了生成式AI赋能下的软件开发的灵活性和效率。作者将其称为“流体软件”，强调其适应性强，能够完全符合用户的习惯。

接着，文章深入探讨了生成式AI在业务系统开发中的应用，提出了“业务流程导向”的开发方法论。这种方法将软件模块划分为独立的业务流程单元，强调个体优化而非整体优化，降低了软件开发的复杂性，使添加新功能和改进现有功能变得更加容易。每个业务流程的代码、需求分析、测试规范等都集中管理，提高了效率。

文章的最后部分讨论了生成式AI在“模拟系统”中的应用。作者指出，模拟系统不仅可以用于物理、化学、生物学等科学领域，还可以应用于商业管理、游戏开发等各个方面。生成式AI使得创建复杂的模拟系统变得容易，即使是无法用数学表达的元素也能进行模拟，这将改变人们进行模拟的方式，促进更准确、高效的模拟结果。

作者认为，生成式AI的应用将改变我们的思维方式，从线性的、依赖直觉和假设的思维方式转变为“模拟思维”。在讨论复杂问题时，我们可以利用生成式AI构建模拟模型，参与者只需修正模型和规则，并检查模拟结果，从而使讨论更加高效和客观。最终，这将创建一个更清晰、更精确、更注重事实的讨论环境，消除由于信息不对称或认知偏差带来的误解。</description>
    </item>
    
    <item>
      <title>体验与行为</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_10_experience-behavior/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_10_experience-behavior/</guid>
      <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了软件工程的范式转变。传统软件工程以规范和实现为中心，通过测试确保实现符合规范。然而，随着用户体验的日益重要，作者提出了&quot;体验与行为工程&quot;的概念，它关注软件的行为而非仅仅是实现。

作者认为，在生成式AI和代理型软件开发自动化日益普及的时代，软件重构变得更容易接受。这使得开发&quot;流体软件&quot;成为可能，即通过AI工程师聊天机器人，用户可以根据个人偏好修改软件UI，从而实现高度个性化的用户体验。流体软件意味着软件比传统软件更具灵活性，能完美契合每个用户。

文章进一步解释了&quot;行为&quot;的概念，将其定义为随时间变化的状态。测试行为并非简单地验证其与规范的一致性，而是从用户体验的角度评估其质量。虽然功能的符合性和有效性仍然重要，但最终目标是提供高质量的用户体验。

作者以人类对自身身体的控制为例，阐述了终极用户体验的标准。即使身体是一个复杂且受限的系统，健康的人却能轻松自如地控制它，这种毫不费力的控制体验就是终极体验。作者认为，通过追求高质量的行为，软件也能提供类似的体验，即使系统本身可能速度慢、功能复杂且受限。

最终，作者总结道，终极流体软件将提供与我们自身身体相似的体验，成为我们身体的一部分，其数量增加或能力增强将如同身体的扩展。文章的核心在于倡导一种新的软件工程范式，将用户体验和软件行为置于核心地位，并通过AI驱动的自动化和流体软件技术来实现这一范式转变。这种转变将超越传统的规范和实现的框架，专注于创造无压力的、高度个性化的用户体验，使软件更好地服务于用户，并融入用户的生活。</description>
    </item>
    
    <item>
      <title>知识结晶：超乎想象的翅膀</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_10_knowledge-crystallization/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_10_knowledge-crystallization/</guid>
      <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文的核心概念是“知识结晶”，作者认为知识不仅是信息，也包含抽象的规律。文章以飞行的物理学原理为例，阐述了“知识晶体”的概念。作者认为，机翼完美地整合了飞行的所有要素，从滑翔到动力飞行，都依赖于机翼产生的空气阻力、力向转换和气流差。这种将众多知识点高度一致地抽象和整合的知识形式，被作者称为“知识晶体”。

文章进一步提出了“知识湖”、“知识库”、“知识宝盒”和“知识工具箱”四个层次的概念。“知识湖”指的是未经整理的大量知识集合；“知识库”指的是已文档化并结构化的知识；“知识宝盒”指的是从知识湖和知识库中提炼出的知识晶体，是具有新颖性和潜在价值的知识；“知识工具箱”指的是将知识晶体加工成具有实际应用价值的工具。

作者认为，本文对飞行和机翼的阐述本身并非科学发现，但其将已知知识进行整合和提炼，从而形成“知识晶体”的过程具有新颖性。这表明，即使是已知的知识，也存在着无数的机会进行提炼和结晶，创造出有用的知识工具。作者强调，发现知识晶体不需要特殊的技能或特权，每个人都可以参与其中，这标志着知识的民主化。

文章的逻辑结构清晰，从飞行的例子出发，引出“知识晶体”的概念，并以此为基础，层层递进地阐述了知识的四个层次及其应用。文章的结论是，通过不断地提炼和结晶知识，并将其转化为工具，我们可以充分利用人工智能，最终达到许多人曾认为遥不可及的目标。作者相信，凭借知识的翅膀，我们将能够飞越超乎想象的天空。

文章的创新点在于提出了“知识结晶”的概念，并以此为框架，系统地阐述了知识的组织、提炼和应用过程。作者通过类比飞行和机翼，生动形象地说明了知识晶体的形成和价值。文章的论证严谨，逻辑清晰，具有较强的说服力。文章的语言简洁流畅，易于理解。文章的意义在于，它为知识的组织和应用提供了一种新的思路和方法，同时也鼓励人们积极参与知识的创造和应用，从而推动社会进步。

文章的不足之处在于，对“知识晶体”的定义不够精确，缺乏具体的可操作性。此外，文章中的一些概念，如“知识宝盒”和“知识工具箱”，也需要进一步的阐述和界定。尽管如此，文章仍然是一篇具有启发性和思考价值的文章，为知识管理和应用提供了新的视角。</description>
    </item>
    
    <item>
      <title>人工学习智能系统：ALIS构想</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_09_alis-concept/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_09_alis-concept/</guid>
      <pubDate>Sat, 09 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文提出了人工学习智能系统（ALIS）的概念，这是一种结合了先天学习（神经网络监督学习）和后天学习的系统。ALIS的核心在于可重用知识的提取、存储、选择和利用。文章详细阐述了ALIS的五个要素：智能处理器（例如大型语言模型LLM或人脑）、知识存储（LLM中的神经网络参数或人脑的长期记忆）、世界（ALIS感知的外部环境）、状态内存（LLM的隐藏状态或人脑的短期记忆）和框架（推理时选择知识的标准以及组织状态内存的逻辑结构）。ALIS的运作原理是智能处理器作用于世界，提取可复用知识并存储，然后利用这些知识调整其作用方式。文章探讨了后天知识的类型，建议使用自然语言文本化的知识，因为它易于提取、存储、选择、利用、检查、理解、编辑、共享和合并。文章还讨论了后天状态内存和框架，建议使用自然语言文本，因为这可以利用LLM的自然语言处理能力。此外，文章还探讨了形式知识（使用形式语言或形式模型表达的知识），以及如何将这三种知识系统（神经网络参数知识、自然知识和形式知识）与两种状态（无状态和有状态）结合使用。文章还提出了“智能编排”的概念，即通过将知识存储划分为专业知识存储，并根据智力任务类型进行切换，来提高效率。在基本设计和开发方法方面，文章建议采用增量式和敏捷开发方法，并提供了一个简单的ALIS示例，该示例使用聊天AI作为用户界面，从聊天历史中提取知识，并将其存储在知识湖中，然后将其结构化成知识库，最后将其集成到聊天AI的处理中。文章还讨论了如何改进简单的ALIS，例如增加预检查注释和事后检查注释机制。最后，文章展望了ALIS的未来发展，包括在各种领域中应用ALIS，以及将其与具身AI整合的可能性。总而言之，本文对ALIS的构想进行了全面的探讨，从概念原理到具体设计和开发方法，以及未来的发展方向，都做了详细的阐述。ALIS旨在通过结合先天学习和后天学习，并有效利用各种类型的知识和状态，实现更强大和高效的智能系统。</description>
    </item>
    
    <item>
      <title>自然语言机器学习</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_08_natural-language-ml/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_08_natural-language-ml/</guid>
      <pubDate>Fri, 08 Aug 2025 00:00:00 GMT</pubDate>
      <description>传统的机器学习依赖数值数据，而人类和大型语言模型（LLM）则能够通过语言学习。本文提出了一种新的机器学习方法：自然语言机器学习，它利用预训练的LLM处理自然语言数据进行学习，而LLM的参数在学习过程中保持不变。文章首先描述了一个基本的监督学习模型，该模型用于解决分类问题，例如区分公司总务课和庶务课的职责。在这个模型中，输入语句被输入到LLM中，LLM生成回应，教师系统判断回应的正确性，并将输入语句、回应和判断结果保存到知识库中。知识库中的信息随后被添加到LLM的系统提示中，以提高后续回应的准确性。虽然这个基本模型在实践中缺乏现实意义，但通过将其应用于实际场景，例如咨询分配系统，该模型就具有了实用价值。在咨询分配系统中，LLM根据知识库中的信息将咨询分配给相应的部门，人工干预纠正错误分配，并将纠正结果添加到知识库中，从而实现持续学习。文章重点强调了自然语言机器学习相对于传统数值型机器学习的优势，即其压倒性的高学习效率。数值型机器学习通常需要大量的训练数据、迭代学习和数据预处理，而自然语言机器学习则只需要较少的训练数据，无需迭代学习，也通常不需要预处理。这是因为自然语言可以进行抽象和信息聚合，减少了对训练数据的需求，并且原始数据可以直接用作训练数据。文章最后总结道，尽管LLM的自然语言处理能力相对较慢，但自然语言机器学习的高学习效率弥补了这一缺点，并且随着大型语言模型的规模增长接近极限，自然语言机器学习可能成为未来提升模型能力的关键方向。</description>
    </item>
    
    <item>
      <title>博客文章自动生成演示视频</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_06_auto-presentation-video/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_06_auto-presentation-video/</guid>
      <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文介绍了作者开发的一个系统，该系统能够自动将博客文章转换为演示视频并上传到YouTube。该系统利用生成式AI自动完成从演示文稿创作到视频制作的整个流程。

系统的核心在于演示文稿的生成。由于现有的图像生成AI难以处理以文本和图形为中心的文档，作者选择使用SVG格式作为生成演示文稿的中间格式。通过向生成式AI发出以SVG格式创建演示文稿的请求，系统能够生成所需的材料。

然而，系统面临一个主要的挑战：文本溢出。生成的SVG文档中经常出现文本超出边界的情况。作者尝试了几种方法来解决这个问题，包括在生成过程中向AI提供规则、操作规程和注意事项，以及在生成后使用生成式AI和自定义程序进行检查。在生成过程中，作者指导AI避免使用复杂图形、固定字体大小、预估文本宽度和高度以防止溢出，并将检查过程记录在SVG文件中。  这些措施在一定程度上抑制了文本溢出，但无法完全避免。在生成后，作者尝试使用图像识别AI和再次向生成式AI输入SVG文本进行检查，但准确性仍然不高。最终，作者编写了一个程序，通过计算文本长度和字体大小来精确检测文本溢出。对于AI试图创建复杂图表的情况，作者保留了让生成式AI执行规则违反检查的方法。

如果检查中检测到文本溢出或规则违反，生成的SVG材料将被丢弃并重新生成。一旦生成合格的SVG演示材料，系统将使用生成式AI创建旁白脚本，并使用文本转语音AI将其转换为音频数据。最后，系统将SVG材料转换为PNG图像，并使用ffmpeg将其与音频数据组合成MP4视频。

整个过程中的许多步骤，例如将SVG转换为PNG，以及使用ffmpeg进行视频合成，都通过编写程序实现了自动化。作者在上周开始在YouTube上发布由该系统生成的视频。文章最后提到，谷歌的AI工具NotebookLM也新增了类似的功能，预示着未来类似的服务将更加普及，但作者仍然认为自己开发这个系统的过程是一项重大的成就，让他掌握了有效利用生成式AI的关键原则。</description>
    </item>
    
    <item>
      <title>注意力机制作为微虚拟智能</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_08_06_micro-vm-intelligence/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_08_06_micro-vm-intelligence/</guid>
      <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了注意力机制在生成式AI中的作用，并将其与虚拟智能的概念联系起来。文章首先介绍了注意力机制，即AI在处理自然语言时选择性地关注相关词语的能力，这使得AI能够更准确地理解上下文，即使在长文本中也能避免语义丢失。然后，文章引入了虚拟智能的概念，指AI能够根据任务动态地选择和使用相关知识，而无需人为干预。文章认为，当前生成式AI的局限性在于需要人为地将知识库分割成多个部分，分别用于不同的任务。而虚拟智能则能够在单一智能内部模拟多个虚拟智能体的协同工作，类似于虚拟机运行多个操作系统。文章进一步将注意力机制比作“微虚拟智能”，因为它在词语层面选择性地关注相关信息，与虚拟智能在知识层面选择性地使用知识类似。文章最后提出了“显式注意力机制”的概念，这是一种通过自然语言声明明确指定任务所需知识的机制，它可以由生成式AI自行生成或更新，从而进一步提升AI的智能水平。这种显式注意力机制可以被看作是宏观的注意力机制，与微虚拟智能（注意力机制）形成互补。文章的结论是，注意力机制不仅仅是一个有效的技术手段，更是高级智能的本质特征，它在各个层面递归地增强智能，无论是微观的词语处理，还是宏观的知识选择，都体现了这种动态选择和利用信息的能力。通过将注意力机制与虚拟智能联系起来，文章为理解和提升生成式AI的智能水平提供了新的视角，并指出了未来研究的方向，例如如何更好地构建和管理显式注意力知识，以及如何将显式注意力机制与神经网络学习相结合，从而开发出更强大和高效的AI系统。文章强调了动态选择和利用信息的重要性，这正是高级智能的关键所在，而注意力机制正是这种能力的核心体现。通过显式地声明任务所需的知识，可以进一步提升AI的效率和准确性，避免因为信息过载而导致的性能下降。这种显式注意力机制的引入，也为构建更复杂、更强大的AI系统提供了新的可能性。总而言之，文章从注意力机制出发，深入探讨了生成式AI的智能本质，并提出了虚拟智能和显式注意力机制等新的概念，为未来AI研究提供了有益的参考。</description>
    </item>
    
    <item>
      <title>空间感知的维度：AI的潜力</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_space-dimension-ai/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_space-dimension-ai/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了AI在多维空间感知方面的潜力及其对科学发现的影响。文章首先阐述了人类感知三维空间的机制，即基于二维视觉信息构建三维空间图像。在此基础上，作者推测人类可能通过计算机模拟学习感知四维空间，但这种能力的应用场景有限。

文章的核心论点在于，AI能够更好地利用多维空间感知能力。与人类不同，AI无需将高维数据映射到低维平面，而是能够以维度原生、全景的方式理解三维和四维图表，从而克服了人类在处理高维数据时遇到的信息隐藏和认知障碍。AI能够直观地进行跨维度趋势分析、大小比较和比例理解，发现隐藏的数据模式和规律，这超越了现有AI的简单多维数据模式匹配能力。

作者进一步指出，这种多维视觉能力可以应用于探索数据维度结构，通过扩展、收缩或变换维度轴来寻找更容易理解的数据模式。AI通过对多维视觉的训练，能够全景式地掌握数据结构，从而开启发现新见解和规律的潜力。文章以日心说的例子说明，如果能够直接理解高维数据，人类可能早就能发现类似日心说的规律，从而加速科学发现。

文章最后总结道，经过多维空间原生训练的AI，将利用其超越人类的认知能力，迅速拓展科学和学术领域的范式范围。即使新范式难以被人类完全理解，AI仍然能够以人类易于理解的方式进行解释。作者认为，未来人类可能生活在一个由AI创造的、基于高维数据理解的复杂系统所包围的世界中，即使我们不完全理解其底层原理。</description>
    </item>
    
    <item>
      <title>交响智能时代</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_symphonic-intelligence/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_symphonic-intelligence/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生成式AI在现代业务流程中的应用现状与未来展望，主要围绕迭代工作和流程工作两个方面展开。文章指出，目前大多数生成式AI的应用还停留在作为工具辅助人类进行迭代工作的阶段，而迭代工作的效率提升存在瓶颈，即人类工作时长的限制和资深员工与新员工之间效率差距的难以弥补。为了解决这些问题，文章提出将迭代工作转化为流程工作，并通过系统将人类和生成式AI的任务连接起来。流程工作的系统化具有三大优势：首先，可以针对每个任务优化生成式AI的效率和准确性；其次，多名工作人员可以向系统中添加知识，惠及所有人；第三，更容易逐步将任务分配给生成式AI。通过流程工作和系统化，智力工作可以逐步实现自动化。文章进一步提出了&quot;虚拟智能&quot;的概念，指生成式AI在单次执行中切换角色和知识的能力，这类似于计算机的虚拟机技术，能够提升效率和准确性，并避免了不同AI系统之间集成的复杂性。在此基础上，文章又提出了&quot;智能编排&quot;的概念，指生成式AI自由组合多个角色和知识来执行任务的能力，这类似于管理多个虚拟机的编排技术。最终，文章提出了&quot;交响智能&quot;的概念，它代表了生成式AI发展的一个顶点，指能够像管弦乐队一样，多个AI协同完成复杂任务的能力，这与人类的智能类似。文章认为，通过为模拟交响智能的生成式AI提供流程工作和知识库，它能够处理多项迭代任务，并学习这些任务中的普遍规律和知识结构模式，最终达到通用人工智能（AGI）的一种形态，即能够通过观察人类执行任务来学习新的任务，并自动积累和共享知识，学习能力远超人类。</description>
    </item>
    
    <item>
      <title>虚拟智能的编排</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_virtual-intelligence-orchestration/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_30_virtual-intelligence-orchestration/</guid>
      <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了虚拟智能和智能编排的概念及其应用。虚拟智能是指在实际智能之上实现的虚拟智能，例如人类在扮演不同角色时的思维方式，或对话式AI生成多角色对话。智能编排则是在虚拟智能的基础上，通过提示指令而非系统开发，来实现复杂的组织性任务。这与系统编排（利用多个AI进行系统开发）形成对比。智能编排的优势在于其灵活性和快速迭代能力。通过指令，可以灵活切换多个人工智能的角色和组合，从而易于进行改进和功能添加。文章进一步提出“终极熟虑”的概念，指通过指导AI运用智能编排技能进行思考，促使其从多种视角融合信息，并通过迭代改进虚拟智能的角色和结构，最终提高思维的精确性和广度，并带来新的发现和创造力。这种方法无需繁琐的系统开发，仅需通过常规聊天界面中的指令即可实现。最终，文章总结了虚拟智能和智能编排在商业领域的应用前景，认为其能够大幅增加人工智能替代人类执行任务的场景，因为单个AI模型能够根据任务需求在不同角色和知识之间切换，并通过组织性熟虑分析和积累失败经验，从而不断更新自身知识。</description>
    </item>
    
    <item>
      <title>模拟思维与生命起源</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_29_simulation-thinking/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_29_simulation-thinking/</guid>
      <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生命起源的难题，并提出了一种名为“模拟思维”的思维方法。作者认为，理解生命起源的关键在于理解累积互动，即通过逐步追踪简单化学物质的累积和相互作用，来理解复杂生命的形成过程。文章以一个简单的数学问题为例，说明人们往往难以理解累积互动的结果，而模拟思维正是帮助人们克服这种思维障碍的方法。

作者认为，生命起源的第一步是地球从最初只含有简单化学物质的状态，过渡到包含稍微复杂化学物质的状态。这一转变是由于地球上水和空气的反复循环，以及化学物质在全球范围内的混合和反应造成的。虽然这一过程没有直接证据，但它是一个合理的假设，并且难以否认。作者认为，这种稍微复杂的化学物质已经具备了自我维持、复制和代谢的雏形，尽管这些能力远不如现存生物体那样精细。这种自我维持、复制和代谢的雏形，体现在这些稍微复杂的化学物质在全球范围内维持着一定的恒定数量，即使它们不断地被破坏和生成。

作者进一步指出，地球上众多的湖泊和池塘，以及火山灰和尘埃云，为化学物质的反应和聚合提供了理想的环境。尘埃云作为终极的单体工厂，利用整个地球和太阳能，持续不断地生产单体，为聚合物的形成提供原材料。聚合物，如蛋白质和核酸，是生命体的重要组成部分，它们的形成进一步促进了生命演化的进程。

文章强调，理解生命起源需要摆脱局部的视角，而应从全球的角度来看待这一过程。生命起源的下一步，就像第一步一样，也是一个全球性的现象，它涉及到更复杂化学物质的形成和更精细的自我维持、复制和代谢机制的演化。通过反复的步骤，化学物质会逐渐累积地变得更加复杂，最终导致生命体的出现。

作者认为，模拟思维是一种通过逐步追踪累积和互动来逻辑地理解结果的思维方法。它与计算机模拟不同，它是一种基于自然语言、逻辑结构、已知科学事实和客观推理的思维方式。作者将这种思维方式称为“自然数学”，它能够帮助人们更容易地理解复杂的概念。作者认为，模拟思维在软件开发中尤其重要，因为软件开发本身就是一个累积互动的过程。软件开发人员需要运用模拟思维来理解客户的需求，并将其转化为计算机程序。作者将这种在软件开发中运用的模拟思维称为“双重模拟思维”，即原理性模拟思维和语义性模拟思维。

最后，作者总结道，模拟思维是一种重要的思维模式，它不仅能够帮助人们理解生命起源等复杂科学问题，还能帮助人们理解组织和社会结构等复杂主题。作者相信，在未来的社会中，拥有模拟思维技能的人将在各个领域发挥积极作用。</description>
    </item>
    
    <item>
      <title>流程工作转化与系统：生成式AI利用的本质</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_29_tool-vs-system/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_29_tool-vs-system/</guid>
      <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了如何利用生成式AI提升业务效率，核心观点是将迭代工作转化为流程工作并进行系统化，而非仅仅将AI视为工具。文章首先区分了迭代工作（灵活试错，逐步创建成果）和流程工作（循序渐进，最终产出成果），指出工业革命和IT革命的成功在于将迭代工作转化为流程工作并系统化。作者认为，生成式AI的有效利用也遵循这一原则，其优势在于能够轻松地进行迭代重新配置角色和任务内容，这与人类员工相比具有显著优势。文章以处理员工咨询公司内部规章制度为例，说明了将迭代工作（员工单独处理咨询）转化为流程工作（明确步骤、流程化处理咨询）的必要性和方法。具体流程包括接收咨询、根据既有答案回复、审查规章准备回复草稿、检查回复草稿、检查回复前是否需要批准、通过原渠道回复、登记咨询内容、定期检查咨询历史数据、更新公司内部网站、更新规章数据等。通过流程化，可以进一步进行系统化，例如整合咨询渠道或保持所有渠道开放，利用IT系统和生成式AI执行后续任务，并通过不断更新AI指令以减少错误，最终实现更高效的咨询处理。文章最后指出，许多人低估生成式AI的潜力，是因为将AI仅仅视为工具，或者专注于让AI执行迭代工作，而忽略了流程工作转化和系统化的重要性。作者强调，有效利用生成式AI的关键在于转变思维模式，将任务转化为流程工作并进行系统化，才能实现持续改进和效率提升，如同工业生产和IT系统化一样。</description>
    </item>
    
    <item>
      <title>流体软件时代的“全方位工程师”</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_28_liquidware-allrounder/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_28_liquidware-allrounder/</guid>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了生成式AI对软件开发模式和工程师角色的深刻影响，并提出了“流体软件”和“全方位工程师”的概念。

文章首先介绍了生成式AI在程序生成方面的能力，指出其可以辅助甚至替代部分程序员的工作，但同时也承认其局限性，例如指令模糊性、知识库更新滞后等。通过人类工程师的指令优化和互联网知识补充，生成式AI的程序生成能力正不断提升，越来越多的软件开发任务可以交由其完成。文章以作者自身经验为例，说明了生成式AI辅助软件开发的实际应用和面临的挑战。

接下来，文章提出了“流体软件”（Liquidware）的概念，这是一种可由用户通过口头指令或其他方式进行自定义修改的软件。通过生成式AI的驱动，用户可以自主调整软件功能、界面设计等，使软件更贴合个人需求。这种模式赋予了用户更大的自主权，也为软件开发者带来了优势，例如减少了功能请求的处理负担，提高了用户满意度。文章比较了传统软件、可互换软件和流体软件的区别，指出流体软件的出现标志着软件开发和使用模式的重大变革，用户创意将在流体软件时代爆发式增长。

文章进一步分析了“流体软件”并非遥远未来，而是正在发生的现象。以电商网站为例，文章说明了如何通过生成式AI和服务器端机制实现用户对网站界面的个性化定制。

文章的核心论点在于，生成式AI的应用将大幅降低软件开发成本，并改变工程师的角色。传统上，软件开发需要全栈工程师负责整体设计，其他工程师专注于特定领域。随着AI承担更多编程工作，对全栈工程师的需求将增加，但仅仅掌握全栈技能已不足够。文章提出了“全方位工程师”的概念，这类工程师具备跨越多个系统栈的知识和技能，能够统筹整个软件开发项目，并处理不同系统栈间的协作。

文章详细阐述了“全方位工程师”的角色，指出他们无需精通所有编程语言和平台，而是能够利用生成式AI辅助完成大部分编程工作，并专注于设计、架构、风险管理等方面。他们的主要职责是设计功能分配、系统协作、项目管理等。

最后，文章以一个复杂的电商平台项目为例，说明了“全方位工程师”在开发“全方位软件”中的作用。这种软件需要整合多个系统栈、兼容各种设备和平台，并支持流体软件功能。文章认为，在生成式AI的支持下，开发这种复杂的软件将成为可能，而“全方位工程师”将成为这种新时代软件开发的关键角色。文章总结指出，生成式AI驱动的自动化编程、流体软件和全方位软件开发已成为现实，IT工程师需要努力成为“全方位工程师”，甚至扩展到“全方位业务工程”和“全方位社会工程”等更广阔的领域。</description>
    </item>
    
    <item>
      <title>思考的宿命：AI与人类</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_12_fate-of-thinking/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_12_fate-of-thinking/</guid>
      <pubDate>Sat, 12 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了人工智能时代人类思考方式的转变。作者认为，随着AI承担大部分智力劳动，人类将不再需要进行以往的智力劳动，但这并不意味着人类将停止思考。相反，人类将面临一种新的思考方式，即个体优化。

文章首先提出了“流程导向”作为继面向对象方法之后的下一个软件开发范式。流程导向的核心思想是将编程的核心模块视为一个流程，由事件或条件启动，按照预定义的顺序处理，最终终止。这种方式更符合人类的直觉，并且在AI辅助编程的背景下，容忍流程中重复的处理和数据结构成为可能，从而实现个体优化。

作者进一步将这种个体优化的思想扩展到社会层面，提出了“个体优化社会”的概念。在传统社会中，人们遵循标准化的价值观和准则，但在许多例外情况下，需要根据具体情况进行灵活的判断。AI时代的高效率将使得这种个体判断成为主流，整体优化让位于个体优化。

作者还提出了“主观哲学”的概念，这是一种伦理视角，强调深入熟虑的价值。在个体优化社会中，每个事件都具有其个体性，做出判断的个体负有相应的责任。即使结果不尽如人意，只要是经过充分熟虑的判断，就是符合伦理的。

最后，作者总结道，AI时代人类将面临“思考的宿命”。虽然AI可以承担大部分智力劳动，但最终的决策仍然需要人类做出。在高度高效的社会中，人们将无法逃避深入的个体判断，而这需要设计个体框架的能力和技能。文章认为，个体优化和主观哲学将成为未来社会和软件开发的核心，而人类将需要具备设计框架的能力，持续地进行深入思考。</description>
    </item>
    
    <item>
      <title>业务流程导向软件邀约</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_07_11_business-process-oriented/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_07_11_business-process-oriented/</guid>
      <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
      <description>本文介绍了一种新的软件开发方法：业务流程导向软件。它不同于传统的面向对象软件，而是将业务流程作为软件的基本单元。每个业务流程都包含在一个单一文件中，该文件包含业务手册、输入信息字段以及相关人员的联系方式。这个文件本身就是业务流程导向软件，可以直接由人和人工智能执行。

传统软件开发方法中，业务流程、业务手册和输入信息是分离的，修改和添加功能需要修改程序或系统，耗时且成本高。而业务流程导向软件则将这三者整合在一个文件中，修改流程只需修改文件即可，极大地提高了效率和灵活性。

该软件的核心思想是将业务流程的所有要素集中在一个单一实体中，这个实体可以是任何文件格式，但考虑到人工智能辅助，建议使用易于AI处理的格式，如Markdown。文件中包含业务手册，指导流程的执行；输入信息字段，用于记录流程中的数据；以及相关人员联系方式，方便沟通和协作。

人工智能可以辅助执行业务流程。它可以读取文件中的业务手册，自动执行部分任务，并将需要人工处理的部分交给人类。人工智能会以用户友好的方式向人类呈现信息，例如通过文本或语音聊天、生成临时文件等。人类只需完成最少的工作，而无需学习大量信息或掌握复杂的流程。

这种方法的好处在于：1. 提高效率，减少修改成本和时间；2. 促进知识积累，方便业务流程改进；3. 建立快速学习型组织，使组织能够快速适应变化。通过人工智能的辅助，人类可以专注于更具创造性和战略性的任务，而人工智能则负责处理重复性和技术性的工作。

总而言之，业务流程导向软件是一种新的、高效的软件开发方法，它通过将业务流程、手册和信息整合在一个文件中，并结合人工智能的辅助，实现了快速学习、高效执行的组织模式。它适用于各种规模和类型的组织，可以显著提高组织效率和适应性。</description>
    </item>
    
    <item>
      <title>作为一种智力能力的框架设计</title>
      <link>https://katoshi-mfacet.github.io/zh/articles/2025_06_29_framework-design-ability/</link>
      <guid>https://katoshi-mfacet.github.io/zh/articles/2025_06_29_framework-design-ability/</guid>
      <pubDate>Sun, 29 Jun 2025 00:00:00 GMT</pubDate>
      <description>本文探讨了学术活动与开发活动中智力活动的不同模式，并特别关注框架设计在学术领域中的重要性。文章指出，学术活动通常以通过观察发现事实为核心，而开发活动则以通过设计发明事物和系统为核心，两者代表不同的智力活动。然而，学术活动中也存在通过设计进行发明的智力活动，即框架设计。文章以地心说、日心说、牛顿力学、相对论和量子力学为例，说明这些科学理论并非单纯的客观事实发现，而是根据其有用性而非正确性被选择的思维框架，代表了范式创新而非范式转换。作者认为，在各种学术领域，发明新的、高度有用的思维框架非常重要，这是一种通过设计进行发明的智力活动。文章进一步分析了通过观察进行发现和通过设计进行发明所需的技能组合的差异。那些在学术界带来重大范式创新的人，很可能同时拥有这两种不同的技能组合。然而，许多学者和研究人员更擅长在已有的框架内通过观察进行发现，因此他们可能缺乏通过设计进行发明的技能组合。文章最后指出，软件工程师由于日常工作中需要进行抽象概念的元层面重构和设计，因此他们有可能具备进行学术框架设计的技能组合，但要达到这种高级应用，必须擅长抽象概念设计并习惯性思考新设计模型。总而言之，本文的核心论点是，框架设计作为一种通过设计进行发明的智力活动，在学术领域中具有重要地位，而软件工程师由于其工作性质，可能具备从事学术框架设计的潜力。文章通过比较学术活动和开发活动，以及不同类型智力活动的技能组合，深入探讨了框架设计在学术研究中的独特作用和软件工程师在其中潜在的角色。</description>
    </item>
    
  </channel>
</rss>