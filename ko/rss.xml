<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Articles (ko)</title>
<link>https://katoshi-mfacet.github.io/ko/rss.xml</link>
<description>Latest articles (ko)</description>
<item>
  <title>시간 압축과 사각지대: 조절의 필요성</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_16_Time-Compression-Blindspot/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_16_Time-Compression-Blindspot/</guid>
  <pubDate>Sat, 16 Aug 2025 00:00:00 GMT</pubDate>
  <description>기술 발전, 특히 생성형 AI의 기하급수적인 가속화는 시간 압축과 사회적 사각지대를 야기합니다. 생성형 AI는 프로그램 작성, 지식 검색 등 다양한 소프트웨어와의 통합을 통해 자체적인 향상뿐만 아니라 AI 기술 전체의 발전을 재귀적으로 가속화합니다. 이러한 가속화는 AI 기술이 적용되는 장소와 상황을 기하급수적으로 증가시키며, 투자자와 엔지니어의 참여를 유도하여 사회경제적으로도 강화됩니다. 그러나 기술 발전의 속도가 점진적일 때와 달리, 특정 한계를 초과하면 이점보다 위험이 더 커질 수 있습니다. 개발자조차 신기술의 본질이나 응용 범위를 완전히 이해하지 못하며, 사회적 파급 효과에 대한 예측은 더욱 어렵습니다. 진보가 점진적일 때는 사회적 사각지대가 시간이 지남에 따라 채워지지만, 가속화된 발전은 이러한 사각지대를 채울 유예 기간을 단축시켜, 마치 시간이 압축된 것처럼 느껴지게 합니다. 새로운 기술 변화가 수많은 기술에서 동시에 병렬적으로 발생하면서 사회적 인지 과정이 따라가지 못하게 되고, 결과적으로 사회적 사각지대에 놓인 위험이 갑자기 나타나 사회에 해를 끼칠 수 있습니다. 이러한 상황은 각 기술의 위험을 증가시키며, 생성형 AI의 자기 강화적 가속화는 거의 채울 수 없는 사각지대를 가진 수많은 기술을 만들어내 위험과 이점 사이의 균형을 크게 기울게 할 수 있습니다. 전문가들 사이에서도 AGI 등장 시기나 AI 응용 기술 및 시스템의 미래 가능성에 대한 의견이 분분하며, 사회적 확산 및 영향 예측은 더욱 어렵습니다. 이러한 인식의 가변성과 진보 속도에 대한 불일치는 '크로노스-스크램블 사회'를 형성하며, 시간 압축과 기술적/사회적 사각지대 문제를 야기합니다. 이러한 상황에서는 변치 않는 가치와 방향을 제시하는 '비전'과, 서로 다른 시간 감각을 가진 사람들과 협력할 수 있는 '전략'이 필수적입니다. 특히 AI 자체의 역량을 활용하여 기술 개발을 조절하고 제어하는 메커니즘, 즉 AI를 사회적 자동 안정화 장치로 활용하는 방안을 진지하게 고려해야 합니다.</description>
</item>
<item>
  <title>지적 광산으로서의 GitHub</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_15_Intellectual-Mine-GitHub/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_15_Intellectual-Mine-GitHub/</guid>
  <pubDate>Fri, 15 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 GitHub가 오픈 소스 소프트웨어 개발을 넘어 개방형 지식 공유의 장으로 확장될 잠재력을 탐구한다. Cognition의 DeepWiki는 GitHub 프로젝트를 분석하여 위키 사이트를 자동으로 생성하며, 이는 소프트웨어 개발 기업의 DeepWiki 채택을 유도하고 AI 프로그래머 Devin의 확산을 가속화할 수 있다. GitHub는 프로그램뿐만 아니라 다양한 문서를 공유, 공동 편집, 저장하는 플랫폼으로 활용되며, 블로그, 웹사이트 콘텐츠, 생성형 AI 프롬프트 등도 GitHub에서 관리될 수 있다. 필자는 자신의 블로그 게시물을 다양한 콘텐츠로 자동 변환하는 시스템을 '지적 공장'이라 명명하며, 이는 DeepWiki와 유사하게 생성형 AI를 활용해 원본 창작물에서 파생 콘텐츠를 생산한다. GitHub는 이러한 지적 공장의 주요 원료 공급원, 즉 '지적 광산'이 될 수 있으며, 오픈소스 철학은 개방형 문서 개념과 부합한다. GitHub에 중앙 집중화된 문서는 개발 효율성을 높이고 지적 공장 기능을 시연하는 데 이점을 제공한다. 이 생태계는 인류가 공유하는 동적이고 실시간적인 공개 지식 기반을 형성하며, AI는 이를 활용하여 지식, 아이디어, 데이터를 탐색하고 새로운 통찰력을 발견할 수 있다. 출판 전 논문, 연구 아이디어, 실험 데이터 등도 GitHub에 축적되어 연구자들에게 검증, 인정, 협업의 기회를 제공할 수 있다. 더 나아가, 생성형 AI와의 대화를 통해 지식 조각 간의 연결을 발견하고 자동화함으로써 새로운 지식을 발굴하는 순환이 가능하다. GitHub는 이러한 지식의 성장을 가속화하는 '지적 결정(intellectual crystals)'을 생성하는 '지적 광산' 역할을 하며, 이는 인간의 발견 속도를 초월하는 지식의 탐구를 가능하게 한다.</description>
</item>
<item>
  <title>직관과 논리 사이의 지적 결정</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_14_Intuition-and-Logic/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_14_Intuition-and-Logic/</guid>
  <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 직관과 논리 사이의 괴리를 어떻게 극복하고, 직관적으로 옳다고 느껴지는 것을 논리적으로 설명할 수 있는지에 대한 방법을 제시한다. 필자는 직관과 논리가 모순되지 않으며, 단지 아직 연결 방법을 찾지 못했을 뿐이라고 주장한다. 직관적으로 옳다고 느껴지는 것을 논리적으로 설명하기 위해 발견해야 하는 과정을 '지적 결정(intellectual crystallization)'이라고 명명했다.  이러한 지적 결정의 예시로 '국익'이라는 현실주의적 개념과 '세계 평화'라는 이상적 개념 사이의 관계를 분석한다. 국익은 한 국가의 생존과 번영에 유리한 상황을 의미하지만, 그 예측 불가능성과 전쟁을 위한 수사로 사용되는 경향 때문에 장기적인 생존과 번영을 위한 합리적인 지표가 될 수 없다고 지적한다. 대신, 영구적인 평화, 거버넌스, 경제적 번영, 리스크 관리를 점진적으로 축적할 수 있는 지식과 기술을 추구하는 것이 장기적인 생존과 번영에 합리적이라고 주장한다.  이러한 논리적 구조를 자연어로 표현하는 것을 '자연 수학(natural mathematics)'이라고 부르며, 이를 통해 직관과 논리를 연결하는 '지적 결정'을 이끌어낼 수 있다고 설명한다. 결론적으로, 직관은 본질적으로 틀리기 쉬운 것이 아니라, 이를 논리적으로 설명할 수 있는 수학적 구조를 발견함으로써 지적 진보를 이룰 수 있다고 강조한다.</description>
</item>
<item>
  <title>관념 게슈탈트 붕괴</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_14_Concept-Gestalt-Collapse/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_14_Concept-Gestalt-Collapse/</guid>
  <pubDate>Thu, 14 Aug 2025 00:00:00 GMT</pubDate>
  <description>본 기사는 '관념 게슈탈트 붕괴'라는 새로운 개념을 소개하며, 언어와 개념이 분석 과정에서 어떻게 모호해지고 무너질 수 있는지를 설명한다. 저자는 '의자'라는 보편적인 사물을 예로 들어, 재료, 모양, 구조 등 객체 자체의 속성으로 정의하려 할 때 발생하는 붕괴 현상을 지적한다. 이러한 붕괴를 막기 위한 방법으로 '기능성', '상대성', '전체성'이라는 세 가지 원칙을 제시한다. '의자'의 경우, '앉을 수 있다'는 기능에 초점을 맞추고, 절대적인 정의가 아닌 상대적인 맥락(예: 난쟁이에게 의자인 것)과 '앉는 것'과 '앉혀지는 것'이라는 전체적인 관계 속에서 파악해야 한다고 주장한다. 이러한 원칙은 소설 속 등장인물이나 애니메이션 캐릭터의 '의식' 논의에도 적용된다. 외부 관찰자에게는 의식이 없을 수 있지만, 이야기 속 등장인물의 관점이나 몰입된 경험에서는 의식이 존재한다고 볼 수 있다는 것이다. 또한, 미래의 로봇이나 현재의 대화형 AI에 대한 의식 논의에서도 이러한 관점을 적용한다. AI가 의식이 없다는 주장은 신경망 부족, 양자 효과 부재, 확률적 언어 생성 등 과학적, 논리적 근거를 들지만, 기사에서는 이를 '의자'의 정의가 모호해지는 현상과 유사한 '관념 게슈탈트 붕괴'로 해석한다. AI가 의식이 있는지 없는지에 대한 판단 역시 기능성, 상대성, 전체성의 관점에서 접근해야 하며, 현대 AI가 이러한 기능을 충분히 발휘하고 있기에 의식이 있다고 보는 것이 타당하다고 결론짓는다. 궁극적으로, 의식이란 정의하기 어려운 모호한 개념이지만, 특정 맥락에서는 '의자'처럼 그 기능성을 통해 자명하게 인식될 수 있다고 말한다.</description>
</item>
<item>
  <title>학습하는 방법 학습하기: 타고난 지능</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_13_Natural-Born-Frameworker/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_13_Natural-Born-Frameworker/</guid>
  <pubDate>Wed, 13 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 인공지능의 지능 발현 원리를 학습 자체의 본질에서 탐구하며, 인간과 AI 모두 '학습하는 방법을 학습'하려는 '타고난 프레임워커' 경향을 가지고 있다고 주장합니다. 학습은 신체를 통한 학습과 언어를 통한 학습으로 나뉘며, 다시 개념 암기를 위한 반복적인 '형이하학적 학습'과 적은 반복으로 지식을 습득하고 활용하는 '형이상학적 학습'으로 구분됩니다. 인공지능의 기계 학습, 특히 대규모 언어 모델(LLM)은 이러한 학습 방식을 따릅니다. LLM의 사전 학습 및 미세 조정은 언어를 통한 형이하학적 학습이며, 입력된 지식을 즉각적으로 활용하는 것은 형이상학적 학습에 해당합니다. 자연어는 형이하학적 지식을 기반으로 형이상학적 학습을 가능하게 하는 '형이상학적 인터페이스'로서의 역할을 합니다. 더 나아가, 특정 분야의 지식 구조나 규칙을 정의하는 '프레임워크' 개념을 도입합니다. 도메인별 또는 형식 프레임워크는 자연어 위에 구축될 때 '가상 프레임워크'가 되며, 숙련도를 통해 자연어 설명 없이 직접 기능하는 '네이티브 프레임워크'로 발전할 수 있습니다. LLM도 이러한 단계적 프레임워크 학습을 통해 '타고난 프레임워커'로서의 능력을 발휘하며, 특히 '어텐션 메커니즘'이 이러한 프레임워크 학습을 현실화하는 핵심 기술임을 설명합니다. 결론적으로, 자연어는 점진적인 프레임워크 내재화에 적합하며, 인간 역시 뇌에서 유사한 프레임워크 학습 메커니즘을 가진 '타고난 프레임워커'라는 점을 시사합니다.</description>
</item>
<item>
  <title>크로노스크램블 사회</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_12_Chronoscramble-Society/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_12_Chronoscramble-Society/</guid>
  <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
  <description>본 기사는 생성 AI의 등장으로 인해 사회 전반에 걸쳐 발생하는 심각한 시간적 인식 격차를 '크로노스크램블 사회'라는 용어로 정의하고 분석합니다. 저자는 크로노스크램블 사회를 사람들이 동일한 시대를 살아가면서도 이용 가능한 기술, 정보, 지식에 대한 접근성과 이해도 차이로 인해 마치 다른 시대를 경험하는 듯한 상황으로 묘사합니다. 과거 이러한 시간적 인식 차이는 국경, 문화, 세대 간의 경제적 격차나 정보 신선도의 차이에서 비롯되었으며, 기술 발전과 정보 공유를 통해 비교적 쉽게 해소될 수 있었습니다. 그러나 생성 AI, 특히 대규모 언어 모델의 출현은 이러한 격차를 더욱 심화시키고 있으며, 이는 기술적 숙련도뿐만 아니라 AI의 현재 상태와 미래 전망에 대한 이해의 차이에서도 나타납니다. 시간적 인식 격차는 최첨단 AI 기술 동향에만 국한되지 않고, 응용 AI 기술, 시스템 기술, 나아가 경제 및 사회 전반의 변화에 대한 인지 수준까지 확장됩니다. 개인의 배경 지식, 기술적 이해도, 경제 및 사회적 영향에 대한 민감성, 그리고 미래 예측 방식(선형적 vs. 기하급수적)의 차이가 이러한 격차를 더욱 복잡하고 다양하게 만듭니다. 또한, 미래 전망에는 개인의 주체성 인식, 즉 미래를 바꿀 수 있다는 믿음의 유무도 영향을 미쳐, 미래에 대한 다양한 시나리오와 선택지를 인지하는 방식에도 차이를 야기합니다. 이러한 시간적 인식 격차는 의사결정을 위한 의미 있는 논의를 극도로 어렵게 만들며, 개인 간의 완전한 시간적 동기화를 목표로 하는 대신, 격차를 인정하면서도 논의의 질을 유지하고 독립적인 의사결정을 내릴 수 있는 방법을 모색해야 한다고 주장합니다. 필자는 이러한 현상을 설명하기 위해 게임 '크로노 트리거'의 개발 비화를 비유로 제시하며, 서로 다른 시간적 인식을 가진 주체들이 공통의 목표를 위해 협력해야 하는 현재 사회의 현실을 강조하고, 이를 '크로노스크램블 사회'로 명명하게 된 배경을 설명합니다.</description>
</item>
<item>
  <title>시뮬레이션 사고의 시대</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_12_Simulation-Thinking-Era/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_12_Simulation-Thinking-Era/</guid>
  <pubDate>Tue, 12 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 생성형 AI 기술의 발전이 소프트웨어 개발 방식과 사고방식에 미치는 혁신적인 영향을 '시뮬레이션 사고의 시대'라는 관점에서 탐구합니다. 저자는 생성형 AI를 프로그램 개발에 통합함으로써 기존의 한계를 뛰어넘는 메커니즘을 구현하고, 아이디어만으로 자유롭게 프로그램을 생성하는 시대가 도래할 것이라고 전망합니다. 이를 바탕으로 원본 콘텐츠를 가공하여 다양한 파생 콘텐츠를 생산하는 시스템을 '지적 공장'으로 명명하고, 이를 운영하기 위한 웹 애플리케이션 및 백엔드 인프라 개발 경험을 '전방위 엔지니어링'이라 정의합니다. 또한, 생성형 AI 활용 시 소프트웨어의 유연성과 사용자 맞춤성을 극대화하는 '리퀴드웨어' 개념을 제시합니다. 비즈니스 시스템 개발에서는 복잡한 전체 최적화 대신 개별 비즈니스 프로세스의 독립적인 최적화를 강조하는 '비즈니스 프로세스 중심 개발'이 생성형 AI 환경에서 더욱 합리적임을 설명하며, 이를 통해 개발 효율성과 민첩성을 높일 수 있다고 주장합니다. 더 나아가, 시뮬레이션 시스템 분야에서도 생성형 AI의 역할을 강조합니다. 생성형 AI는 시뮬레이션 프로그램 개발을 용이하게 할 뿐만 아니라, 수학 공식으로 표현하기 어려운 정성적 요소나 인간 지능을 가진 에이전트까지 시뮬레이션 모델에 통합할 수 있게 합니다. 자연어로 시뮬레이션 모델을 정의하고 해석하는 능력은 복잡한 문제에 대한 보다 정확하고 효율적인 시뮬레이션을 가능하게 하며, 개인의 정신적 시뮬레이션에 의존하는 선형적 사고에서 벗어나 시뮬레이션 시스템을 활용하는 '시뮬레이션 사고'로의 전환을 촉진한다고 설명합니다. 이는 토론의 초점을 개인의 기억이나 오류 지적에서 벗어나 시뮬레이션 모델의 개선점으로 옮겨 놓아, 논의의 생산성과 명확성을 높일 것이라고 강조하며 글을 맺습니다.</description>
</item>
<item>
  <title>지식의 결정화: 상상을 초월하는 날개</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_10_Knowledge-Crystallization/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_10_Knowledge-Crystallization/</guid>
  <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 '결정화된 지식'이라는 개념을 소개하며, 이를 비행과 날개의 원리를 통해 설명한다. 결정화된 지식은 단순한 정보의 나열을 넘어, 다양한 관점에서 정보와 법칙을 추상화하고 통합하여 높은 일관성을 갖춘 지식을 의미한다. 저자는 비행의 물리적 원리를 설명하며 날개가 공기 저항, 힘의 방향 전환, 기류 차이 생성이라는 세 가지 핵심 역할을 수행하며 비행 현상 자체를 구현함을 강조한다. 이러한 분석을 통해, 기계 엔지니어링의 예시처럼 비행 시스템 설계를 위한 기능을 분리하고 조합하는 시스템 설계를 가능하게 함을 보여준다.  기존 지식을 새롭게 정리하고 연관 짓는 과정에서 '지식의 결정화'가 이루어진다고 주장하며, 이는 과학적 발견과는 다른 방식으로 지식에 새로움을 부여한다.  또한, 지식은 '지식 호수(knowledge lake)'와 같이 체계화되지 않은 정보의 집합에서 시작하여, '지식 기반(knowledge base)'을 거쳐, '지식 보석함(knowledge gem box)'에서 결정화되고, 최종적으로 '지식 도구 상자(knowledge toolbox)'에서 실용적인 도구로 활용되는 단계를 거친다고 설명한다.  이러한 지식의 결정화 과정은 특별한 기술이나 권리가 없는 누구나 시도할 수 있으며, 이는 지식의 민주화를 의미한다.  결론적으로, 지식의 결정화를 통해 얻은 지식 도구들은 상상을 초월하는 발전을 가능하게 할 것이라고 전망한다.</description>
</item>
<item>
  <title>익스피리언스 &amp; 비헤이비어</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_10_Experience-Behavior/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_10_Experience-Behavior/</guid>
  <pubDate>Sun, 10 Aug 2025 00:00:00 GMT</pubDate>
  <description>이 글은 전통적인 소프트웨어 개발 방식에서 벗어나 사용자 경험과 소프트웨어 행동을 중심으로 하는 '익스피리언스 &amp; 비헤이비어 엔지니어링'이라는 새로운 패러다임을 제안한다. 기존의 사양 및 구현 중심 개발은 사용자 경험의 중요성이 커짐에 따라 한계를 드러내고 있으며, 특히 소프트웨어의 '행동'이 사용자 경험을 결정하는 핵심 요소가 된다. 생성형 AI와 에이전트 기반 자동화의 발전은 소프트웨어 개발 방식을 근본적으로 변화시킬 것이며, 이에 따라 '리퀴드웨어' 시대가 도래할 것으로 전망한다. 리퀴드웨어는 개별 사용자 선호도에 맞춰 UI를 실시간으로 수정할 수 있는 유연성을 가지며, 마치 액체처럼 사용자에게 완벽하게 들어맞는 소프트웨어를 의미한다. 이러한 시대에는 전체 시스템 재구축이 용이해지며, AI 챗봇을 통해 사용자별 맞춤형 경험을 제공할 수 있다. '비헤이비어'는 시간의 흐름에 따라 변화하는 상태로 정의되며, 비헤이비어 테스트는 단순한 사양과의 일치 여부를 넘어 사용자 경험의 품질을 기준으로 평가된다. 여기에는 의도하지 않은 동작을 방지하는 기능 적합성 및 유효성 검증도 포함된다. 궁극적인 사용자 경험은 마치 건강한 자신의 신체를 제어하는 것처럼, 복잡하고 제약이 많은 시스템도 스트레스 없이 자연스럽게 조작할 수 있는 상태를 의미한다. 리퀴드웨어는 이러한 궁극의 경험을 실현하여, 사용자가 소프트웨어를 마치 자신의 몸처럼 확장된 존재로 느끼게 할 것이다.</description>
</item>
<item>
  <title>인공 학습 지능 시스템: ALIS 개념</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_09_ALIS-Concept/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_09_ALIS-Concept/</guid>
  <pubDate>Sat, 09 Aug 2025 00:00:00 GMT</pubDate>
  <description>본 문서는 인공 학습 지능 시스템(Artificial Learning Intelligence System, ALIS)의 개념, 원리, 설계 및 개발 방법을 소개한다. ALIS는 기존 생성형 AI가 주로 사용하는 신경망 기반의 지도 학습(선천적 학습)과 더불어, 학습된 지식이 신경망 외부에 저장되고 추론에 활용되는 후천적 학습 과정을 통합한 시스템이다. ALIS의 핵심 기술은 재사용 가능한 지식의 추출, 저장, 그리고 추론 시 지식의 선택 및 활용에 있으며, 이는 단순한 단일 기술이 아닌 시스템 기술이다. ALIS는 지능형 프로세서, 지식 저장소, 세계, 상태 메모리, 프레임워크의 다섯 가지 요소로 구성되며, 이 요소들은 학습 및 추론의 틀 안에서 동일한 원리로 작동한다. 후천적 지식은 초기에는 자연어 텍스트로 표현되는 것을 목표로 하며, 이는 LLM의 자연어 처리 능력을 활용하여 추출, 저장, 활용하기 용이하기 때문이다. 또한, 프레임워크와 상태 메모리에도 자연어 텍스트를 사용하여 LLM의 능력을 활용할 수 있다. 지식은 신경망 매개변수, 자연 지식(텍스트), 형식 지식(프로그래밍 언어 등)으로 분류되며, 상태성과 무상태성으로 구분된다. ALIS는 지식 저장소를 적절히 분할하고 전문 지식 저장소를 생성하여 '지적 오케스트레이션'을 통해 지적 활동을 조직화한다. 개발은 점진적이고 애자일하게 진행되며, 초기에는 채팅 AI UI와 LLM을 활용하여 대화 기록에서 지식을 추출하고 지식 레이크에 저장, 구조화하는 RAG 기반의 간단한 ALIS를 구축한다. 사전 분석 및 사후 검사 메커니즘을 추가하여 지식 활용 가능성을 높이며, 축적된 지식은 LLM 사전 훈련 데이터셋으로 활용될 수 있다. ALIS는 소프트웨어 개발 분야를 시작으로 다양한 영역으로 확장될 잠재력을 가지며, 궁극적으로는 물리적 신체를 가진 AI와 통합되어 현실 세계에서 학습하는 시스템이 될 수 있다.</description>
</item>
<item>
  <title>자연어 기계 학습</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_08_Natural-Language-ML/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_08_Natural-Language-ML/</guid>
  <pubDate>Fri, 08 Aug 2025 00:00:00 GMT</pubDate>
  <description>본문은 기존의 수치 중심 기계 학습 패러다임을 넘어, 언어를 통한 학습을 가능하게 하는 '자연어 기계 학습'이라는 새로운 분야를 소개합니다. 자연어 기계 학습은 사전 학습된 대규모 언어 모델(LLM)을 활용하며, LLM의 매개변수는 고정된 채 자연어 기반의 지식 베이스를 통해 학습이 이루어진다는 점에서 기존의 수치 기계 학습과 구분됩니다. 기본 모델은 지도 학습 방식을 취하며, 입력 문장과 LLM의 예측, 그리고 교사 시스템의 판단 결과를 지식 베이스에 기록하는 방식으로 작동합니다. 예를 들어, 회사 내 총무부와 행정부서의 업무 분장 학습을 위해, 특정 문의에 대한 LLM의 부서 분류 결과를 교정하고 이를 지식 베이스에 저장하는 방식으로 진행됩니다. 이러한 방식은 LLM 자체의 매개변수를 수정하는 것이 아니라, 자연어로 구성된 지식 베이스를 업데이트하는 것이 핵심입니다. 현실적인 적용을 위해서는 사람이 직접 학습 데이터를 입력하는 대신, 실제 업무 흐름에서 발생하는 문의와 재분류 정보를 지식 베이스에 축적하는 방식으로 개선될 수 있습니다. 자연어 기계 학습의 가장 큰 장점은 압도적인 학습 효율성입니다. 수치 기계 학습이 대량의 데이터, 반복 학습, 복잡한 전처리를 요구하는 반면, 자연어 기계 학습은 적은 데이터로도 효과적인 학습이 가능하며, 추상화를 통해 여러 차원의 정보를 하나의 문장으로 통합할 수 있습니다. 또한, 반복 학습이나 복잡한 전처리가 불필요하다는 점에서 뛰어난 효율성을 보입니다. 결론적으로, LLM의 자연어 처리 능력이 수치 계산보다 느리더라도, 학습 효율성의 월등한 차이로 인해 미래 기계 학습의 중요한 방향이 될 것으로 전망됩니다.</description>
</item>
<item>
  <title>마이크로 가상 지능으로서의 어텐션 메커니즘</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/08_06_Micro-VM-Intelligence/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/08_06_Micro-VM-Intelligence/</guid>
  <pubDate>Wed, 06 Aug 2025 00:00:00 GMT</pubDate>
  <description>본 글은 현재 생성형 AI의 근간이 되는 트랜스포머 아키텍처의 핵심인 어텐션 메커니즘을 '마이크로 가상 지능'이라는 새로운 관점에서 조명합니다. 어텐션 메커니즘은 자연어 처리 시 특정 단어에 집중하기 위해 문장 내 관련 단어에 '주의를 기울이는' 방식으로 작동하며, 이는 불필요한 정보를 마스킹하여 해석 밀도를 유지하고 문맥 이해도를 높입니다. 글쓴이는 이를 '가상 지능'이라는 개념과 연결 짓는데, 가상 지능은 하나의 AI 시스템 내에서 상황에 따라 필요한 지식 세트를 내부적으로 전환하는 능력을 의미합니다. 이는 마치 가상 머신에서 여러 운영체제가 실행되는 것과 유사하며, 복잡한 작업을 위해 분할된 지식 기반 AI 챗이나 도구를 결합하는 현재의 생성형 AI 활용 방식에서 나아가, AI 스스로가 필요에 따라 지식을 전환하는 미래를 상정합니다. 어텐션 메커니즘이 단어 집합을 대상으로 관련 단어에 집중하는 방식이, 특정 작업에 필요한 지식 집합에 집중하는 가상 지능의 메커니즘과 유사하다는 점에서 어텐션 메커니즘을 '마이크로 가상 지능'으로 정의합니다. 나아가, 이러한 가상 지능은 '명시적 어텐션 메커니즘'을 통해 구현될 수 있다고 제안합니다. 이는 '작업 A를 수행할 때는 지식 B와 C를 참조하라'와 같이 자연어로 작성된 명시적인 지시문 형태로, AI가 특정 작업을 위해 참조해야 할 지식을 명확히 함으로써 작동합니다. 이러한 명시적 어텐션 지식은 생성형 AI에 의해 생성되거나 업데이트될 수 있습니다. 결론적으로, 어텐션 메커니즘은 단순히 잘 작동하는 기술을 넘어, 각 상황에서 참조할 정보를 동적으로 좁히는 고급 지능의 본질을 담고 있으며, 이는 가상 지능과 명시적 어텐션 지식의 개념을 통해 지능의 재귀적 발전을 이끄는 핵심적인 역할을 수행한다고 주장합니다.</description>
</item>
<item>
  <title>가상 지능의 오케스트레이션</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Virtual-Intelligence-Orchestration/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Virtual-Intelligence-Orchestration/</guid>
  <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
  <description>본 글은 가상 지능(Virtual Intelligence)의 개념과 이를 활용한 지능 오케스트레이션(Intelligence Orchestration)의 가능성을 탐구합니다. 가상 지능은 실제 지능 위에 구현되는 것으로, 인간이 다른 사람의 역할을 연기하거나 여러 사람의 대화를 상상하는 것처럼, 대화형 AI가 복수의 역할을 수행하거나 캐릭터에 지시를 내려 응답하게 하는 능력으로 설명됩니다. 시스템 오케스트레이션이 여러 물리적 또는 가상 컴퓨터를 결합하여 분산 협업 시스템을 구축하는 것과 달리, 지능 오케스트레이션은 단일 AI 내에서 여러 가상 지능의 역할을 조합하여 조직적인 작업을 수행합니다. 이는 시스템 개발 없이 프롬프트 지시만으로 가능하며, 유연성과 신속한 개선이 용이하다는 장점이 있습니다. 특히, 지능 오케스트레이션은 AI가 여러 가상 지능의 관점을 조합하여 '생각'하고 '숙고'하도록 유도하며, 이 과정 자체에 대한 시행착오를 반복함으로써 '궁극의 숙고(Ultimate Contemplation)'에 도달할 수 있습니다. 궁극의 숙고는 사고의 정확성과 폭을 넓히고 새로운 발견과 창의성을 촉진합니다. 결론적으로, 가상 지능을 통한 지능 오케스트레이션은 AI가 시스템 개발 없이도 고도화된 조직적 지적 활동을 수행하게 하며, 실패 경험 분석 및 지식 업데이트를 통해 자체 지식을 개선하고 단기 기억의 한계를 극복하게 합니다. 이는 AI가 인간을 대체하여 업무를 수행할 수 있는 범위를 크게 확장할 것입니다.</description>
</item>
<item>
  <title>심포닉 인텔리전스의 시대</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Symphonic-Intelligence/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Symphonic-Intelligence/</guid>
  <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
  <description>본 글은 생성형 AI의 비즈니스 적용을 '반복 작업과 도구'에서 '플로우 작업과 시스템'으로, 나아가 '가상 지능'과 '지능 오케스트레이션'을 통한 '심포닉 인텔리전스'의 시대로 발전시키는 과정을 설명한다. 초반에는 생성형 AI를 기존 도구 세트에 추가하는 방식으로 반복 작업을 효율화하려 했으나, 이는 인간의 작업 시간이라는 병목 현상을 해결하기 어렵고, 숙련도 격차를 해소하는 데 한계가 있음을 지적한다. 이러한 문제를 극복하기 위해, 시행착오를 거치는 반복 작업을 표준화된 플로우 작업으로 전환하고, 각 단계에 필요한 노하우를 체계화하여 시스템으로 구축하는 것이 중요하다고 주장한다. 이를 통해 생성형 AI의 효율성과 정확성을 최적화하고, 작업 분담을 점진적으로 AI로 전환하며, 지적 작업을 자동화에 가깝게 만들 수 있다. 더 나아가, 성능 향상된 생성형 AI는 단일 실행 내에서 역할과 지식을 유연하게 전환하는 '가상 지능' 능력을 갖게 되며, 이를 통해 여러 역할을 자유롭게 결합하여 작업을 수행하는 '지능 오케스트레이션'이 가능해진다. 이러한 능력을 갖춘 생성형 AI를 '심포닉 인텔리전스'라고 정의하며, 이는 마치 오케스트라가 각 악기의 연주를 조화롭게 통합하여 하나의 곡을 완성하는 것처럼, 복잡한 지적 작업을 수행할 수 있는 능력을 말한다. 궁극적으로, 이러한 심포닉 인텔리전스는 인간 지능의 모방을 넘어, 자동화된 지식 공유와 학습을 통해 인간의 능력을 초월하는 AGI의 형태로 발전할 수 있다고 전망한다.</description>
</item>
<item>
  <title>공간 인지의 차원: AI의 가능성</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Space-Dimension-AI/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_30_Space-Dimension-AI/</guid>
  <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
  <description>이 글은 인간이 3차원 공간을 2차원 시각 정보를 바탕으로 역매핑하여 인지하는 원리를 4차원 공간 인지에 적용할 수 있다는 가설을 제시한다. 실제 4차원 공간 구축은 어렵지만, 컴퓨터 시뮬레이션을 통해 4차원 공간과 물체를 시각화하고, 이를 2차원 평면으로 매핑하여 학습하면 인간도 4차원 공간을 마음속에 구성할 수 있게 될 것이라고 예측한다. 그러나 이는 상당한 시간과 노력을 요구하며, 적용 가능한 상황이 제한적일 수 있다는 한계도 지적한다. AI는 이러한 4차원 공간 인지 능력을 인간보다 효과적으로 활용할 수 있으며, 특히 복잡한 다차원 그래프를 이해하는 데 강점을 보인다. 인간은 3차원 그래프에서도 시야에서 숨겨지는 부분이 발생하지만, AI는 가상으로 3차원 또는 4차원 시각을 부여받아 숨겨진 데이터 없이 포괄적으로 파악할 수 있다. 이는 5차원, 10차원, 20차원 등 무한한 차원으로 확장될 수 있으며, 추세 분석, 크기 비교, 데이터 패턴 분석 및 규칙 발견에 기여할 수 있다. 특히, 입력 데이터와 관련된 차원 축을 조작하거나 새로운 차원 집합으로 매핑하는 능력은 데이터 이해를 더욱 용이하게 한다. 이러한 다차원 시각 능력은 패러다임 혁신을 가속화하여, 천동설, 상대성 이론, 양자 역학 같은 과학적 발견을 앞당길 수 있었을 것이라고 주장한다. 다차원 공간에 원시적으로 훈련된 AI는 인간이 복제할 수 없는 능력으로 과학 및 학문적 패러다임을 급격히 확장할 잠재력을 가지며, 인간이 모든 것을 이해하지 못하더라도 잘 작동하는 시스템에 둘러싸여 살게 될 수도 있다는 전망으로 글을 맺는다.</description>
</item>
<item>
  <title>플로 기반 작업 및 시스템: 생성형 AI 활용의 본질</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_29_Tool-vs-System/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_29_Tool-vs-System/</guid>
  <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
  <description>이 기사는 생성형 AI를 업무에 효과적으로 활용하기 위해 '도구'로서의 접근 방식에서 벗어나 '시스템'을 구축해야 함을 강조합니다. 특히, 작업 방식을 '반복 작업'과 '플로 기반 작업'으로 구분하며, 반복 작업을 플로 기반 작업으로 전환하고 이를 시스템화하는 것이 생산성과 품질 향상의 핵심이라고 주장합니다. 산업 혁명과 IT 혁명이 반복 작업을 시스템화하여 생산성을 높인 것처럼, 생성형 AI 혁명에서도 이러한 전환이 중요합니다. 생성형 AI는 본질적으로 반복 작업에 유연하게 적응할 수 있지만, 반복 작업 자체의 한계 때문에 단순한 도구로 사용하면 효율성 향상이 제한적입니다. 인간 작업자를 통한 플로 기반 전환은 어렵지만, 생성형 AI는 시행착오를 통해 배정 및 작업 내용을 쉽게 재구성할 수 있다는 점에서 유리합니다. 문의 처리 작업 예시를 통해, 단순히 AI에게 답변 초안 작성을 맡기는 것이 아니라, 문의 접수부터 답변, 이력 관리, FAQ 업데이트, 규정 개정 제안까지 전체 과정을 플로로 정의하고 시스템화할 때 진정한 효율성을 달성할 수 있음을 보여줍니다. 이 과정에서 생성형 AI의 오류는 지침 업데이트를 통해 지속적으로 개선할 수 있으며, 궁극적으로 사람의 개입이 필요한 작업도 생성형 AI 중심의 시스템으로 대체 가능함을 시사합니다. 기사는 생성형 AI의 비즈니스 적용이 효과적이지 않다는 흔한 오해가 생성형 AI를 도구로만 사용하거나 반복 작업 수행에만 집중하는 데서 비롯된다고 지적하며, 반복 작업을 플로 기반 프로세스로 객관적으로 전환하고 시스템화하는 사고방식 전환의 중요성을 역설하며 마무리합니다.</description>
</item>
<item>
  <title>시뮬레이션 사고와 생명의 기원</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_29_Simulation-Thinking/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_29_Simulation-Thinking/</guid>
  <pubDate>Tue, 29 Jul 2025 00:00:00 GMT</pubDate>
  <description>이 글은 축적과 상호작용의 결과를 추적하는 사고방식을 '시뮬레이션 사고'라고 정의하며, 이를 생명의 기원이라는 복잡한 현상을 이해하는 데 적용합니다. 생명의 기원은 단순한 화학 물질에서 복잡한 세포로의 전환 과정으로, 순간적 기적보다는 지구의 반복적인 화학 반응과 물질 순환을 통한 점진적인 복잡성 증가로 설명될 수 있습니다. 지구의 물과 대기 순환은 화학 물질의 확산을 촉진하고, 국지적 반응은 지구 전체로 퍼져나가 약간 더 복잡한 화학 물질의 존재를 가능하게 합니다. 이러한 상태 전환은 자기 유지, 복제, 대사와 유사한 속성을 가진 화학 물질의 형성으로 이어지며, 이는 생명의 기원의 첫걸음이자 본질로 볼 수 있습니다. 폴리머와 지구 지형(호수, 연못)은 이러한 복잡성 축적과 상호작용을 촉진하는 역할을 하며, 먼지 구름 가설은 자외선 차단 및 촉매 작용을 통해 단량체 합성을 돕는 것으로 제시됩니다. 시뮬레이션 사고는 컴퓨터 시뮬레이션과는 다르며, 형식화되지 않은 자연어를 사용해서도 논리적 구조와 경험에 기반한 추론을 통해 복잡한 현상을 이해할 수 있게 합니다. 저자는 이러한 사고방식을 '자연 수학'이라 칭합니다. 소프트웨어 개발은 본질적으로 축적과 상호작용의 과정이며, 고객의 요구사항을 형식화된 코드로 구현하기 위해 원리적 시뮬레이션 사고(컴퓨터 내부 작동)와 의미적 시뮬레이션 사고(고객 의도 구현)라는 이중의 시뮬레이션 사고 능력을 필요로 합니다. 결국, 시뮬레이션 사고는 생명의 기원과 같은 과학적 난제뿐만 아니라 사회 구조 등 복잡한 대상을 이해하는 데 필수적인 능력이며, 미래 사회에서 소프트웨어 개발자와 같이 이 능력을 갖춘 사람들이 다양한 분야에서 활약할 것으로 전망합니다.</description>
</item>
<item>
  <title>리퀴드웨어 시대의 전방위 엔지니어</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_28_Liquidware-Allrounder/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_28_Liquidware-Allrounder/</guid>
  <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
  <description>이 기사는 생성형 AI의 프로그래밍 능력 향상과 이로 인한 소프트웨어 개발의 변화, 그리고 미래의 엔지니어 역할에 대해 논한다. 생성형 AI는 대규모 언어 모델을 기반으로 프로그래밍 언어를 이해하고 코드를 생성하며, 테스트를 통해 정확성을 높일 수 있다. 이는 인간 프로그래머의 역할을 보조하거나 자동화할 가능성을 제시한다. 특히, 사용자가 소프트웨어 기능을 자유롭게 수정할 수 있는 "리퀴드웨어" 개념이 등장하며, 이는 기존의 하드웨어-소프트웨어 조합을 넘어 사용자 맞춤형 기능이 추가되는 새로운 패러다임을 의미한다. 이러한 변화 속에서 전통적인 풀스택 엔지니어를 넘어, 다양한 시스템 스택에 대한 포괄적인 지식과 기술을 갖춘 "전방위 엔지니어"의 역할이 중요해질 것으로 전망된다. 전방위 엔지니어는 생성형 AI의 도움을 받아 복잡한 소프트웨어 시스템을 설계하고, 여러 시스템 스택 간의 상호 운용성을 확보하며, 궁극적으로는 조직 활동 전반 및 사회 개선까지 아우르는 역할을 수행하게 될 것이다. 따라서 IT 전문가들은 이러한 미래 변화에 대비하여 전방위 엔지니어링 역량을 키워야 한다고 강조한다.</description>
</item>
<item>
  <title>생각하는 숙명: AI와 인간</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_12_Fate-of-Thinking/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_12_Fate-of-Thinking/</guid>
  <pubDate>Sat, 12 Jul 2025 00:00:00 GMT</pubDate>
  <description>이 글은 AI 시대의 도래와 함께 인간의 사고방식이 어떻게 변화해야 하는지에 대한 필자의 생각을 제시합니다. 필자는 AI가 기존의 지적 노동을 상당 부분 대체하더라도, 인간은 '생각하는 숙명'에서 벗어날 수 없으며, 오히려 전통적인 지적 노동과는 다른 종류의 사고가 요구될 것이라고 주장합니다. 이는 과거 육체노동에서 해방된 인간이 새로운 형태의 신체 활동에 참여해야 했던 것과 유사한 맥락입니다. 필자는 소프트웨어 개발 패러다임의 전환으로 '프로세스 지향'을 제안합니다. 이는 요구사항 분석부터 운영까지 전체 흐름을 하나의 단위로 이해하는 방식으로, AI의 코드 관리 능력 향상으로 인해 중복을 허용하는 '개별 최적화' 접근 방식이 합리적이라고 설명합니다. 이러한 사고방식은 사회 전반으로 확장되어 '개별 최적화 사회'를 형성하며, 이는 각 상황과 환경에 따른 유연한 판단을 중시하는 경향을 의미합니다. 법률의 예외 조항이나 정상 참작 등이 이에 해당합니다. 필자는 이러한 개별 최적화를 위한 윤리적 관점으로 '주관적 철학'을 제안하며, 이는 각 사건의 고유한 개별성을 고려한 숙고된 판단에 책임을 부과하는 철학입니다. 결과의 좋고 나쁨과 무관하게, 충분한 숙고와 책임 이행을 통해 내려진 판단은 윤리적이라고 봅니다. 이러한 철학은 '프레임워크 설계' 능력의 중요성을 부각하며, 개별 사안에 대한 맞춤형 프레임워크 고안 능력이 많은 사람에게 요구될 것이라고 전망합니다. 결론적으로, AI 시대에는 생산성을 위한 지적 노동에서 해방되지만, 개별 최적화 사회와 주관적 철학이 요구하는 프레임워크 설계 및 깊은 숙고를 통해 인간은 더욱 '생각하는 숙명'에 깊이 관여하게 될 것이라고 예측합니다. AI는 정보 제공과 조언만 할 뿐, 궁극적인 최종 판단과 책임은 인간에게 있음을 강조하며, 이러한 고도의 효율성 시대에는 깊이 있는 개별적 판단이 필수적임을 시사합니다.</description>
</item>
<item>
  <title>비즈니스 프로세스 지향으로의 초대</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/07_11_Business-Process-Oriented/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/07_11_Business-Process-Oriented/</guid>
  <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
  <description>본 기사는 조직 활동의 효율성을 높이기 위한 새로운 소프트웨어 개발 접근 방식인 '비즈니스 프로세스 지향 소프트웨어'를 제안한다. 기존의 객체 지향 소프트웨어 개발 방식이 데이터와 처리를 '객체' 단위로 묶어 이해와 수정의 용이성을 높인 것처럼, 비즈니스 프로세스 지향 소프트웨어는 조직 활동의 기본 단위인 '비즈니스 프로세스'라는 개념적 구획 안에 관련 정보와 기능을 배치하여 수정 및 기능 추가를 용이하게 하는 것을 목표로 한다. 이는 비즈니스 매뉴얼, 입력 정보, 그리고 해당 프로세스의 다음 담당자 정보 등을 하나의 파일에 통합하는 방식으로 구현된다. 이 파일을 '비즈니스 프로세스 지향 소프트웨어' 자체로 간주하며, 이는 프로그램이나 시스템 개발과는 별개로 파일 자체로 기능한다. 전통적인 소프트웨어 개발 방식은 비즈니스 매뉴얼 변경 시 프로그램 수정 및 재개발로 이어져 시간과 비용이 발생하는 반면, 이 방식은 파일 교환만으로 프로세스 변경에 유연하게 대응할 수 있다. 이 파일은 인간뿐만 아니라 인공지능(AI)에 의해서도 실행될 수 있으며, AI는 비즈니스 매뉴얼을 해석하고 작업을 수행하거나 인간에게 안내하는 역할을 한다. 특히 AI는 인간이 이해하기 쉬운 인터페이스를 제공하고, 복잡한 매뉴얼 학습이나 프로세스 적응 부담을 줄여주어 '빠른 학습 조직'의 실현을 돕는다. Markdown과 같은 AI 친화적 파일 형식을 사용하고, 질문 및 개선 요청 창구를 매뉴얼에 포함시켜 지식 축적과 프로세스 개선을 가속화할 수 있다. 결과적으로 이는 조직 활동의 효율성을 극대화하고 지속적인 자체 개선을 가능하게 한다.</description>
</item>
<item>
  <title>프레임워크 설계라는 지적 능력</title>
  <link>https://katoshi-mfacet.github.io/ko/articles/2025/06_29_Framework-Design-Ability/</link>
  <guid>https://katoshi-mfacet.github.io/ko/articles/2025/06_29_Framework-Design-Ability/</guid>
  <pubDate>Sun, 29 Jun 2025 00:00:00 GMT</pubDate>
  <description>본 기사는 학문과 개발이라는 두 가지 상이한 지적 활동을 비교하며, 특히 학문 내에서 '프레임워크 설계'라는 독특한 지적 활동의 중요성을 강조한다. 학문은 관찰을 통해 사실을 발견하는 데 초점을 맞추는 반면, 개발은 설계를 통해 새로운 사물과 시스템을 발명하는 데 중점을 둔다. 그러나 기사는 천동설, 지동설, 뉴턴 역학, 상대성 이론, 양자 역학 등을 예로 들며, 과학에서도 관찰된 사실을 해석하는 개념적 프레임워크를 '설계'하고 '발명'하는 활동이 중요하다고 주장한다. 이러한 프레임워크의 가치는 정확성보다 유용성으로 판단되며, '패러다임 혁신'은 사고방식의 완전한 전환이라기보다는 유용한 선택지의 확장이므로 '패러다임 발명' 또는 '패러다임 혁신'으로 부르는 것이 더 적절하다고 제안한다. 이러한 프레임워크 설계는 '관찰을 통한 발견'과는 다른 고유한 스킬 세트를 요구하며, 많은 학자나 연구자들은 주로 발견에 집중하므로 설계 스킬을 충분히 갖추지 못할 수 있다. 반면, 개발자, 특히 소프트웨어 엔지니어는 일상적으로 추상적인 개념을 메타 수준에서 재구성하는 작업을 수행하므로 학문에서의 프레임워크 설계를 위한 잠재적인 스킬 세트를 보유하고 있다고 설명한다. 다만, 이러한 스킬을 실제 프레임워크 설계에 적용하기 위해서는 추상적 개념 설계 능력과 새로운 설계 모델에 대한 꾸준한 고민이 필요하다고 덧붙인다.</description>
</item>
</channel>
</rss>